/*
 * This file is generated by jOOQ.
*/
package org.alienchain.explorer.model.tables;


import org.alienchain.explorer.model.Keys;
import org.alienchain.explorer.model.Tmp;
import org.alienchain.explorer.model.tables.records.ContractProposalCreateRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ContractProposalCreate extends TableImpl<ContractProposalCreateRecord> {

    private static final long serialVersionUID = 362109523;

    /**
     * The reference instance of <code>tmp.contract_proposal_create</code>
     */
    public static final ContractProposalCreate CONTRACT_PROPOSAL_CREATE = new ContractProposalCreate();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ContractProposalCreateRecord> getRecordType() {
        return ContractProposalCreateRecord.class;
    }

    /**
     * The column <code>tmp.contract_proposal_create.id</code>.
     */
    public final TableField<ContractProposalCreateRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>tmp.contract_proposal_create.owner_address</code>.
     */
    public final TableField<ContractProposalCreateRecord, String> OWNER_ADDRESS = createField("owner_address", org.jooq.impl.SQLDataType.VARCHAR.length(45).nullable(false), this, "");

    /**
     * The column <code>tmp.contract_proposal_create.transaction_id</code>.
     */
    public final TableField<ContractProposalCreateRecord, ULong> TRANSACTION_ID = createField("transaction_id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * Create a <code>tmp.contract_proposal_create</code> table reference
     */
    public ContractProposalCreate() {
        this("contract_proposal_create", null);
    }

    /**
     * Create an aliased <code>tmp.contract_proposal_create</code> table reference
     */
    public ContractProposalCreate(String alias) {
        this(alias, CONTRACT_PROPOSAL_CREATE);
    }

    private ContractProposalCreate(String alias, Table<ContractProposalCreateRecord> aliased) {
        this(alias, aliased, null);
    }

    private ContractProposalCreate(String alias, Table<ContractProposalCreateRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Tmp.TMP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ContractProposalCreateRecord, ULong> getIdentity() {
        return Keys.IDENTITY_CONTRACT_PROPOSAL_CREATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ContractProposalCreateRecord> getPrimaryKey() {
        return Keys.KEY_CONTRACT_PROPOSAL_CREATE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ContractProposalCreateRecord>> getKeys() {
        return Arrays.<UniqueKey<ContractProposalCreateRecord>>asList(Keys.KEY_CONTRACT_PROPOSAL_CREATE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ContractProposalCreateRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ContractProposalCreateRecord, ?>>asList(Keys.FK_CONTRACT_PROPOSAL_CREATE_TX_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ContractProposalCreate as(String alias) {
        return new ContractProposalCreate(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ContractProposalCreate rename(String name) {
        return new ContractProposalCreate(name, null);
    }
}
