/*
 * This file is generated by jOOQ.
*/
package org.alienchain.explorer.model;


import io.trxplorer.model.tables.*;
import io.trxplorer.model.tables.records.*;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;

import javax.annotation.Generated;


/**
 * A class modelling foreign key relationships between tables of the <code>tmp</code> 
 * schema
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<AccountRecord, ULong> IDENTITY_ACCOUNT = Identities0.IDENTITY_ACCOUNT;
    public static final Identity<AccountAssetRecord, ULong> IDENTITY_ACCOUNT_ASSET = Identities0.IDENTITY_ACCOUNT_ASSET;
    public static final Identity<AccountFrozenRecord, ULong> IDENTITY_ACCOUNT_FROZEN = Identities0.IDENTITY_ACCOUNT_FROZEN;
    public static final Identity<AccountVoteRecord, ULong> IDENTITY_ACCOUNT_VOTE = Identities0.IDENTITY_ACCOUNT_VOTE;
    public static final Identity<BlockRecord, ULong> IDENTITY_BLOCK = Identities0.IDENTITY_BLOCK;
    public static final Identity<BlockErrorRecord, ULong> IDENTITY_BLOCK_ERROR = Identities0.IDENTITY_BLOCK_ERROR;
    public static final Identity<ChartDailyRecord, ULong> IDENTITY_CHART_DAILY = Identities0.IDENTITY_CHART_DAILY;
    public static final Identity<ContractAccountCreateRecord, ULong> IDENTITY_CONTRACT_ACCOUNT_CREATE = Identities0.IDENTITY_CONTRACT_ACCOUNT_CREATE;
    public static final Identity<ContractAccountUpdateRecord, ULong> IDENTITY_CONTRACT_ACCOUNT_UPDATE = Identities0.IDENTITY_CONTRACT_ACCOUNT_UPDATE;
    public static final Identity<ContractAssetIssueRecord, ULong> IDENTITY_CONTRACT_ASSET_ISSUE = Identities0.IDENTITY_CONTRACT_ASSET_ISSUE;
    public static final Identity<ContractBuyStorageRecord, ULong> IDENTITY_CONTRACT_BUY_STORAGE = Identities0.IDENTITY_CONTRACT_BUY_STORAGE;
    public static final Identity<ContractBuyStorageBytesRecord, ULong> IDENTITY_CONTRACT_BUY_STORAGE_BYTES = Identities0.IDENTITY_CONTRACT_BUY_STORAGE_BYTES;
    public static final Identity<ContractCreateSmartcontractRecord, ULong> IDENTITY_CONTRACT_CREATE_SMARTCONTRACT = Identities0.IDENTITY_CONTRACT_CREATE_SMARTCONTRACT;
    public static final Identity<ContractDeployRecord, ULong> IDENTITY_CONTRACT_DEPLOY = Identities0.IDENTITY_CONTRACT_DEPLOY;
    public static final Identity<ContractExchangeCreateRecord, ULong> IDENTITY_CONTRACT_EXCHANGE_CREATE = Identities0.IDENTITY_CONTRACT_EXCHANGE_CREATE;
    public static final Identity<ContractExchangeInjectRecord, ULong> IDENTITY_CONTRACT_EXCHANGE_INJECT = Identities0.IDENTITY_CONTRACT_EXCHANGE_INJECT;
    public static final Identity<ContractExchangeTransactionContractRecord, ULong> IDENTITY_CONTRACT_EXCHANGE_TRANSACTION_CONTRACT = Identities0.IDENTITY_CONTRACT_EXCHANGE_TRANSACTION_CONTRACT;
    public static final Identity<ContractExchangeWithdrawContractRecord, ULong> IDENTITY_CONTRACT_EXCHANGE_WITHDRAW_CONTRACT = Identities0.IDENTITY_CONTRACT_EXCHANGE_WITHDRAW_CONTRACT;
    public static final Identity<ContractFreezeBalanceRecord, ULong> IDENTITY_CONTRACT_FREEZE_BALANCE = Identities0.IDENTITY_CONTRACT_FREEZE_BALANCE;
    public static final Identity<ContractParticipateAssetIssueRecord, ULong> IDENTITY_CONTRACT_PARTICIPATE_ASSET_ISSUE = Identities0.IDENTITY_CONTRACT_PARTICIPATE_ASSET_ISSUE;
    public static final Identity<ContractProposalApproveRecord, ULong> IDENTITY_CONTRACT_PROPOSAL_APPROVE = Identities0.IDENTITY_CONTRACT_PROPOSAL_APPROVE;
    public static final Identity<ContractProposalCreateRecord, ULong> IDENTITY_CONTRACT_PROPOSAL_CREATE = Identities0.IDENTITY_CONTRACT_PROPOSAL_CREATE;
    public static final Identity<ContractProposalDeleteRecord, ULong> IDENTITY_CONTRACT_PROPOSAL_DELETE = Identities0.IDENTITY_CONTRACT_PROPOSAL_DELETE;
    public static final Identity<ContractSellStorageRecord, ULong> IDENTITY_CONTRACT_SELL_STORAGE = Identities0.IDENTITY_CONTRACT_SELL_STORAGE;
    public static final Identity<ContractSetAccountIdRecord, ULong> IDENTITY_CONTRACT_SET_ACCOUNT_ID = Identities0.IDENTITY_CONTRACT_SET_ACCOUNT_ID;
    public static final Identity<ContractTransferRecord, ULong> IDENTITY_CONTRACT_TRANSFER = Identities0.IDENTITY_CONTRACT_TRANSFER;
    public static final Identity<ContractTransferAssetRecord, ULong> IDENTITY_CONTRACT_TRANSFER_ASSET = Identities0.IDENTITY_CONTRACT_TRANSFER_ASSET;
    public static final Identity<ContractTriggerSmartcontractRecord, ULong> IDENTITY_CONTRACT_TRIGGER_SMARTCONTRACT = Identities0.IDENTITY_CONTRACT_TRIGGER_SMARTCONTRACT;
    public static final Identity<ContractUnfreezeAssetRecord, ULong> IDENTITY_CONTRACT_UNFREEZE_ASSET = Identities0.IDENTITY_CONTRACT_UNFREEZE_ASSET;
    public static final Identity<ContractUnfreezeBalanceRecord, ULong> IDENTITY_CONTRACT_UNFREEZE_BALANCE = Identities0.IDENTITY_CONTRACT_UNFREEZE_BALANCE;
    public static final Identity<ContractUpdateAssetRecord, ULong> IDENTITY_CONTRACT_UPDATE_ASSET = Identities0.IDENTITY_CONTRACT_UPDATE_ASSET;
    public static final Identity<ContractUpdateSettingRecord, ULong> IDENTITY_CONTRACT_UPDATE_SETTING = Identities0.IDENTITY_CONTRACT_UPDATE_SETTING;
    public static final Identity<ContractVoteAssetRecord, ULong> IDENTITY_CONTRACT_VOTE_ASSET = Identities0.IDENTITY_CONTRACT_VOTE_ASSET;
    public static final Identity<ContractVoteAssetVoteRecord, ULong> IDENTITY_CONTRACT_VOTE_ASSET_VOTE = Identities0.IDENTITY_CONTRACT_VOTE_ASSET_VOTE;
    public static final Identity<ContractVoteWitnessRecord, ULong> IDENTITY_CONTRACT_VOTE_WITNESS = Identities0.IDENTITY_CONTRACT_VOTE_WITNESS;
    public static final Identity<ContractVoteWitnessVoteRecord, ULong> IDENTITY_CONTRACT_VOTE_WITNESS_VOTE = Identities0.IDENTITY_CONTRACT_VOTE_WITNESS_VOTE;
    public static final Identity<ContractWithdrawBalanceRecord, ULong> IDENTITY_CONTRACT_WITHDRAW_BALANCE = Identities0.IDENTITY_CONTRACT_WITHDRAW_BALANCE;
    public static final Identity<ContractWitnessCreateRecord, UInteger> IDENTITY_CONTRACT_WITNESS_CREATE = Identities0.IDENTITY_CONTRACT_WITNESS_CREATE;
    public static final Identity<ContractWitnessUpdateRecord, ULong> IDENTITY_CONTRACT_WITNESS_UPDATE = Identities0.IDENTITY_CONTRACT_WITNESS_UPDATE;
    public static final Identity<MarketRecord, UInteger> IDENTITY_MARKET = Identities0.IDENTITY_MARKET;
    public static final Identity<NodeRecord, ULong> IDENTITY_NODE = Identities0.IDENTITY_NODE;
    public static final Identity<SyncAccountRecord, ULong> IDENTITY_SYNC_ACCOUNT = Identities0.IDENTITY_SYNC_ACCOUNT;
    public static final Identity<SyncBlockRecord, ULong> IDENTITY_SYNC_BLOCK = Identities0.IDENTITY_SYNC_BLOCK;
    public static final Identity<SyncNodeRecord, UInteger> IDENTITY_SYNC_NODE = Identities0.IDENTITY_SYNC_NODE;
    public static final Identity<TransactionRecord, ULong> IDENTITY_TRANSACTION = Identities0.IDENTITY_TRANSACTION;
    public static final Identity<TransactionResultRecord, ULong> IDENTITY_TRANSACTION_RESULT = Identities0.IDENTITY_TRANSACTION_RESULT;
    public static final Identity<TransferRecord, ULong> IDENTITY_TRANSFER = Identities0.IDENTITY_TRANSFER;
    public static final Identity<VotingRoundRecord, UInteger> IDENTITY_VOTING_ROUND = Identities0.IDENTITY_VOTING_ROUND;
    public static final Identity<VotingRoundStatsRecord, UInteger> IDENTITY_VOTING_ROUND_STATS = Identities0.IDENTITY_VOTING_ROUND_STATS;
    public static final Identity<VotingRoundVoteRecord, ULong> IDENTITY_VOTING_ROUND_VOTE = Identities0.IDENTITY_VOTING_ROUND_VOTE;
    public static final Identity<VotingRoundVoteLostRecord, ULong> IDENTITY_VOTING_ROUND_VOTE_LOST = Identities0.IDENTITY_VOTING_ROUND_VOTE_LOST;
    public static final Identity<WitnessRecord, ULong> IDENTITY_WITNESS = Identities0.IDENTITY_WITNESS;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AccountRecord> KEY_ACCOUNT_PRIMARY = UniqueKeys0.KEY_ACCOUNT_PRIMARY;
    public static final UniqueKey<AccountRecord> KEY_ACCOUNT_ACCOUNT_ADDRESS_UNIQUE = UniqueKeys0.KEY_ACCOUNT_ACCOUNT_ADDRESS_UNIQUE;
    public static final UniqueKey<AccountAssetRecord> KEY_ACCOUNT_ASSET_PRIMARY = UniqueKeys0.KEY_ACCOUNT_ASSET_PRIMARY;
    public static final UniqueKey<AccountAssetRecord> KEY_ACCOUNT_ASSET_ACCOUNT_ASSET_UNIQUE = UniqueKeys0.KEY_ACCOUNT_ASSET_ACCOUNT_ASSET_UNIQUE;
    public static final UniqueKey<AccountFrozenRecord> KEY_ACCOUNT_FROZEN_PRIMARY = UniqueKeys0.KEY_ACCOUNT_FROZEN_PRIMARY;
    public static final UniqueKey<AccountFrozenRecord> KEY_ACCOUNT_FROZEN_UNIQUE_BALANCE_EXPIRE_TIME = UniqueKeys0.KEY_ACCOUNT_FROZEN_UNIQUE_BALANCE_EXPIRE_TIME;
    public static final UniqueKey<AccountVoteRecord> KEY_ACCOUNT_VOTE_PRIMARY = UniqueKeys0.KEY_ACCOUNT_VOTE_PRIMARY;
    public static final UniqueKey<AccountVoteRecord> KEY_ACCOUNT_VOTE_ACCOUNT_VOTE_UNIQUE = UniqueKeys0.KEY_ACCOUNT_VOTE_ACCOUNT_VOTE_UNIQUE;
    public static final UniqueKey<BlockRecord> KEY_BLOCK_PRIMARY = UniqueKeys0.KEY_BLOCK_PRIMARY;
    public static final UniqueKey<BlockRecord> KEY_BLOCK_NUM_UNIQUE = UniqueKeys0.KEY_BLOCK_NUM_UNIQUE;
    public static final UniqueKey<BlockErrorRecord> KEY_BLOCK_ERROR_PRIMARY = UniqueKeys0.KEY_BLOCK_ERROR_PRIMARY;
    public static final UniqueKey<BlockResyncRecord> KEY_BLOCK_RESYNC_PRIMARY = UniqueKeys0.KEY_BLOCK_RESYNC_PRIMARY;
    public static final UniqueKey<ChartDailyRecord> KEY_CHART_DAILY_PRIMARY = UniqueKeys0.KEY_CHART_DAILY_PRIMARY;
    public static final UniqueKey<ChartDailyRecord> KEY_CHART_DAILY_DAY_MONT_YEAR_UNIQUE = UniqueKeys0.KEY_CHART_DAILY_DAY_MONT_YEAR_UNIQUE;
    public static final UniqueKey<ContractAccountCreateRecord> KEY_CONTRACT_ACCOUNT_CREATE_PRIMARY = UniqueKeys0.KEY_CONTRACT_ACCOUNT_CREATE_PRIMARY;
    public static final UniqueKey<ContractAccountUpdateRecord> KEY_CONTRACT_ACCOUNT_UPDATE_PRIMARY = UniqueKeys0.KEY_CONTRACT_ACCOUNT_UPDATE_PRIMARY;
    public static final UniqueKey<ContractAssetIssueRecord> KEY_CONTRACT_ASSET_ISSUE_PRIMARY = UniqueKeys0.KEY_CONTRACT_ASSET_ISSUE_PRIMARY;
    public static final UniqueKey<ContractBuyStorageRecord> KEY_CONTRACT_BUY_STORAGE_PRIMARY = UniqueKeys0.KEY_CONTRACT_BUY_STORAGE_PRIMARY;
    public static final UniqueKey<ContractBuyStorageBytesRecord> KEY_CONTRACT_BUY_STORAGE_BYTES_PRIMARY = UniqueKeys0.KEY_CONTRACT_BUY_STORAGE_BYTES_PRIMARY;
    public static final UniqueKey<ContractCreateSmartcontractRecord> KEY_CONTRACT_CREATE_SMARTCONTRACT_PRIMARY = UniqueKeys0.KEY_CONTRACT_CREATE_SMARTCONTRACT_PRIMARY;
    public static final UniqueKey<ContractDeployRecord> KEY_CONTRACT_DEPLOY_PRIMARY = UniqueKeys0.KEY_CONTRACT_DEPLOY_PRIMARY;
    public static final UniqueKey<ContractExchangeCreateRecord> KEY_CONTRACT_EXCHANGE_CREATE_PRIMARY = UniqueKeys0.KEY_CONTRACT_EXCHANGE_CREATE_PRIMARY;
    public static final UniqueKey<ContractExchangeInjectRecord> KEY_CONTRACT_EXCHANGE_INJECT_PRIMARY = UniqueKeys0.KEY_CONTRACT_EXCHANGE_INJECT_PRIMARY;
    public static final UniqueKey<ContractExchangeTransactionContractRecord> KEY_CONTRACT_EXCHANGE_TRANSACTION_CONTRACT_PRIMARY = UniqueKeys0.KEY_CONTRACT_EXCHANGE_TRANSACTION_CONTRACT_PRIMARY;
    public static final UniqueKey<ContractExchangeWithdrawContractRecord> KEY_CONTRACT_EXCHANGE_WITHDRAW_CONTRACT_PRIMARY = UniqueKeys0.KEY_CONTRACT_EXCHANGE_WITHDRAW_CONTRACT_PRIMARY;
    public static final UniqueKey<ContractFreezeBalanceRecord> KEY_CONTRACT_FREEZE_BALANCE_PRIMARY = UniqueKeys0.KEY_CONTRACT_FREEZE_BALANCE_PRIMARY;
    public static final UniqueKey<ContractParticipateAssetIssueRecord> KEY_CONTRACT_PARTICIPATE_ASSET_ISSUE_PRIMARY = UniqueKeys0.KEY_CONTRACT_PARTICIPATE_ASSET_ISSUE_PRIMARY;
    public static final UniqueKey<ContractProposalApproveRecord> KEY_CONTRACT_PROPOSAL_APPROVE_PRIMARY = UniqueKeys0.KEY_CONTRACT_PROPOSAL_APPROVE_PRIMARY;
    public static final UniqueKey<ContractProposalCreateRecord> KEY_CONTRACT_PROPOSAL_CREATE_PRIMARY = UniqueKeys0.KEY_CONTRACT_PROPOSAL_CREATE_PRIMARY;
    public static final UniqueKey<ContractProposalDeleteRecord> KEY_CONTRACT_PROPOSAL_DELETE_PRIMARY = UniqueKeys0.KEY_CONTRACT_PROPOSAL_DELETE_PRIMARY;
    public static final UniqueKey<ContractSellStorageRecord> KEY_CONTRACT_SELL_STORAGE_PRIMARY = UniqueKeys0.KEY_CONTRACT_SELL_STORAGE_PRIMARY;
    public static final UniqueKey<ContractSetAccountIdRecord> KEY_CONTRACT_SET_ACCOUNT_ID_PRIMARY = UniqueKeys0.KEY_CONTRACT_SET_ACCOUNT_ID_PRIMARY;
    public static final UniqueKey<ContractTransferRecord> KEY_CONTRACT_TRANSFER_PRIMARY = UniqueKeys0.KEY_CONTRACT_TRANSFER_PRIMARY;
    public static final UniqueKey<ContractTransferAssetRecord> KEY_CONTRACT_TRANSFER_ASSET_PRIMARY = UniqueKeys0.KEY_CONTRACT_TRANSFER_ASSET_PRIMARY;
    public static final UniqueKey<ContractTriggerSmartcontractRecord> KEY_CONTRACT_TRIGGER_SMARTCONTRACT_PRIMARY = UniqueKeys0.KEY_CONTRACT_TRIGGER_SMARTCONTRACT_PRIMARY;
    public static final UniqueKey<ContractUnfreezeAssetRecord> KEY_CONTRACT_UNFREEZE_ASSET_PRIMARY = UniqueKeys0.KEY_CONTRACT_UNFREEZE_ASSET_PRIMARY;
    public static final UniqueKey<ContractUnfreezeBalanceRecord> KEY_CONTRACT_UNFREEZE_BALANCE_PRIMARY = UniqueKeys0.KEY_CONTRACT_UNFREEZE_BALANCE_PRIMARY;
    public static final UniqueKey<ContractUpdateAssetRecord> KEY_CONTRACT_UPDATE_ASSET_PRIMARY = UniqueKeys0.KEY_CONTRACT_UPDATE_ASSET_PRIMARY;
    public static final UniqueKey<ContractUpdateSettingRecord> KEY_CONTRACT_UPDATE_SETTING_PRIMARY = UniqueKeys0.KEY_CONTRACT_UPDATE_SETTING_PRIMARY;
    public static final UniqueKey<ContractVoteAssetRecord> KEY_CONTRACT_VOTE_ASSET_PRIMARY = UniqueKeys0.KEY_CONTRACT_VOTE_ASSET_PRIMARY;
    public static final UniqueKey<ContractVoteAssetVoteRecord> KEY_CONTRACT_VOTE_ASSET_VOTE_PRIMARY = UniqueKeys0.KEY_CONTRACT_VOTE_ASSET_VOTE_PRIMARY;
    public static final UniqueKey<ContractVoteWitnessRecord> KEY_CONTRACT_VOTE_WITNESS_PRIMARY = UniqueKeys0.KEY_CONTRACT_VOTE_WITNESS_PRIMARY;
    public static final UniqueKey<ContractVoteWitnessVoteRecord> KEY_CONTRACT_VOTE_WITNESS_VOTE_PRIMARY = UniqueKeys0.KEY_CONTRACT_VOTE_WITNESS_VOTE_PRIMARY;
    public static final UniqueKey<ContractWithdrawBalanceRecord> KEY_CONTRACT_WITHDRAW_BALANCE_PRIMARY = UniqueKeys0.KEY_CONTRACT_WITHDRAW_BALANCE_PRIMARY;
    public static final UniqueKey<ContractWitnessCreateRecord> KEY_CONTRACT_WITNESS_CREATE_PRIMARY = UniqueKeys0.KEY_CONTRACT_WITNESS_CREATE_PRIMARY;
    public static final UniqueKey<ContractWitnessUpdateRecord> KEY_CONTRACT_WITNESS_UPDATE_PRIMARY = UniqueKeys0.KEY_CONTRACT_WITNESS_UPDATE_PRIMARY;
    public static final UniqueKey<MarketRecord> KEY_MARKET_PRIMARY = UniqueKeys0.KEY_MARKET_PRIMARY;
    public static final UniqueKey<NodeRecord> KEY_NODE_PRIMARY = UniqueKeys0.KEY_NODE_PRIMARY;
    public static final UniqueKey<NodeRecord> KEY_NODE_NODE_UNIQUE = UniqueKeys0.KEY_NODE_NODE_UNIQUE;
    public static final UniqueKey<SchemaVersionRecord> KEY_SCHEMA_VERSION_PRIMARY = UniqueKeys0.KEY_SCHEMA_VERSION_PRIMARY;
    public static final UniqueKey<SyncAccountRecord> KEY_SYNC_ACCOUNT_PRIMARY = UniqueKeys0.KEY_SYNC_ACCOUNT_PRIMARY;
    public static final UniqueKey<SyncAccountRecord> KEY_SYNC_ACCOUNT_ADDRESS_UNIQUE = UniqueKeys0.KEY_SYNC_ACCOUNT_ADDRESS_UNIQUE;
    public static final UniqueKey<SyncBlockRecord> KEY_SYNC_BLOCK_PRIMARY = UniqueKeys0.KEY_SYNC_BLOCK_PRIMARY;
    public static final UniqueKey<SyncBlockRecord> KEY_SYNC_BLOCK_BLOCK_NUM_UNIQUE = UniqueKeys0.KEY_SYNC_BLOCK_BLOCK_NUM_UNIQUE;
    public static final UniqueKey<SyncNodeRecord> KEY_SYNC_NODE_PRIMARY = UniqueKeys0.KEY_SYNC_NODE_PRIMARY;
    public static final UniqueKey<SyncNodeRecord> KEY_SYNC_NODE_NODE_ID_UNIQUE = UniqueKeys0.KEY_SYNC_NODE_NODE_ID_UNIQUE;
    public static final UniqueKey<TransactionRecord> KEY_TRANSACTION_PRIMARY = UniqueKeys0.KEY_TRANSACTION_PRIMARY;
    public static final UniqueKey<TransactionRecord> KEY_TRANSACTION_HASH_UNIQUE = UniqueKeys0.KEY_TRANSACTION_HASH_UNIQUE;
    public static final UniqueKey<TransactionResultRecord> KEY_TRANSACTION_RESULT_PRIMARY = UniqueKeys0.KEY_TRANSACTION_RESULT_PRIMARY;
    public static final UniqueKey<TransferRecord> KEY_TRANSFER_PRIMARY = UniqueKeys0.KEY_TRANSFER_PRIMARY;
    public static final UniqueKey<VotingRoundRecord> KEY_VOTING_ROUND_PRIMARY = UniqueKeys0.KEY_VOTING_ROUND_PRIMARY;
    public static final UniqueKey<VotingRoundStatsRecord> KEY_VOTING_ROUND_STATS_PRIMARY = UniqueKeys0.KEY_VOTING_ROUND_STATS_PRIMARY;
    public static final UniqueKey<VotingRoundVoteRecord> KEY_VOTING_ROUND_VOTE_PRIMARY = UniqueKeys0.KEY_VOTING_ROUND_VOTE_PRIMARY;
    public static final UniqueKey<VotingRoundVoteLostRecord> KEY_VOTING_ROUND_VOTE_LOST_PRIMARY = UniqueKeys0.KEY_VOTING_ROUND_VOTE_LOST_PRIMARY;
    public static final UniqueKey<WitnessRecord> KEY_WITNESS_PRIMARY = UniqueKeys0.KEY_WITNESS_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<AccountAssetRecord, AccountRecord> FK_ACCOUNT_ASSET_ACCOUNT_ID = ForeignKeys0.FK_ACCOUNT_ASSET_ACCOUNT_ID;
    public static final ForeignKey<AccountFrozenRecord, AccountRecord> FK_ACCOUNT_FROZEN_ACCOUNT_ID = ForeignKeys0.FK_ACCOUNT_FROZEN_ACCOUNT_ID;
    public static final ForeignKey<AccountVoteRecord, AccountRecord> FK_ACCOUNT_VOTE_VOTE_ACCOUNT_ID = ForeignKeys0.FK_ACCOUNT_VOTE_VOTE_ACCOUNT_ID;
    public static final ForeignKey<AccountVoteRecord, AccountRecord> FK_ACCOUNT_VOTE_ACCOUNT_ID = ForeignKeys0.FK_ACCOUNT_VOTE_ACCOUNT_ID;
    public static final ForeignKey<BlockRecord, WitnessRecord> FK_BLOCK_WITNESS_ID = ForeignKeys0.FK_BLOCK_WITNESS_ID;
    public static final ForeignKey<ContractAccountCreateRecord, AccountRecord> FK_CONTRACT_ACCOUNT_CREATE_OWNER_ID = ForeignKeys0.FK_CONTRACT_ACCOUNT_CREATE_OWNER_ID;
    public static final ForeignKey<ContractAccountCreateRecord, TransactionRecord> FK_CONTRACT_ACCOUNT_CREATE_TX_ID = ForeignKeys0.FK_CONTRACT_ACCOUNT_CREATE_TX_ID;
    public static final ForeignKey<ContractAccountUpdateRecord, AccountRecord> FK_CONTRACT_ACCOUNT_UPDATE_OWNER_ID = ForeignKeys0.FK_CONTRACT_ACCOUNT_UPDATE_OWNER_ID;
    public static final ForeignKey<ContractAccountUpdateRecord, TransactionRecord> FK_CONTRACT_ACCOUNT_UPDATE_TX_ID = ForeignKeys0.FK_CONTRACT_ACCOUNT_UPDATE_TX_ID;
    public static final ForeignKey<ContractAssetIssueRecord, AccountRecord> FK_CONTRACT_ASSET_ISSUE_OWNER_ID = ForeignKeys0.FK_CONTRACT_ASSET_ISSUE_OWNER_ID;
    public static final ForeignKey<ContractAssetIssueRecord, TransactionRecord> FK_CONTRACT_ASSET_ISSUE_TX_ID = ForeignKeys0.FK_CONTRACT_ASSET_ISSUE_TX_ID;
    public static final ForeignKey<ContractBuyStorageRecord, TransactionRecord> FK_CONTRACT_BUY_STORAGE_TX_ID = ForeignKeys0.FK_CONTRACT_BUY_STORAGE_TX_ID;
    public static final ForeignKey<ContractBuyStorageBytesRecord, TransactionRecord> FK_CONTRACT_BUY_STORAGE_BYTES_TX_ID = ForeignKeys0.FK_CONTRACT_BUY_STORAGE_BYTES_TX_ID;
    public static final ForeignKey<ContractCreateSmartcontractRecord, TransactionRecord> FK_CONTRACT_CREATE_SMARTCONTRACT_TX_ID = ForeignKeys0.FK_CONTRACT_CREATE_SMARTCONTRACT_TX_ID;
    public static final ForeignKey<ContractDeployRecord, AccountRecord> FK_CONTRACT_DEPLOY_OWNER_ID = ForeignKeys0.FK_CONTRACT_DEPLOY_OWNER_ID;
    public static final ForeignKey<ContractDeployRecord, TransactionRecord> FK_CONTRACT_DEPLOY_TX_ID = ForeignKeys0.FK_CONTRACT_DEPLOY_TX_ID;
    public static final ForeignKey<ContractExchangeCreateRecord, TransactionRecord> FK_CONTRACT_EXCHANGE_CREATE_TX_ID = ForeignKeys0.FK_CONTRACT_EXCHANGE_CREATE_TX_ID;
    public static final ForeignKey<ContractExchangeInjectRecord, TransactionRecord> FK_CONTRACT_EXCHANGE_INJECT_TX_ID = ForeignKeys0.FK_CONTRACT_EXCHANGE_INJECT_TX_ID;
    public static final ForeignKey<ContractExchangeTransactionContractRecord, TransactionRecord> FK_CONTRACT_EXCHANGE_TRANSACTION_CONTRACT_TX_ID = ForeignKeys0.FK_CONTRACT_EXCHANGE_TRANSACTION_CONTRACT_TX_ID;
    public static final ForeignKey<ContractExchangeWithdrawContractRecord, TransactionRecord> FK_CONTRACT_EXCHANGE_WITHDRAW_CONTRACT_TX_ID = ForeignKeys0.FK_CONTRACT_EXCHANGE_WITHDRAW_CONTRACT_TX_ID;
    public static final ForeignKey<ContractFreezeBalanceRecord, TransactionRecord> FK_CONTRACT_FREEZE_BALANCE_TX_ID = ForeignKeys0.FK_CONTRACT_FREEZE_BALANCE_TX_ID;
    public static final ForeignKey<ContractFreezeBalanceRecord, AccountRecord> FK_CONTRACT_FREEZE_BALANCE_OWNER_ID = ForeignKeys0.FK_CONTRACT_FREEZE_BALANCE_OWNER_ID;
    public static final ForeignKey<ContractParticipateAssetIssueRecord, AccountRecord> FK_CONTRACT_PARTICIPATE_ASSET_ISSUE_OWNER_ID = ForeignKeys0.FK_CONTRACT_PARTICIPATE_ASSET_ISSUE_OWNER_ID;
    public static final ForeignKey<ContractParticipateAssetIssueRecord, AccountRecord> FK_CONTRACT_PARTICIPATE_ASSET_ISSUE_TO_ID = ForeignKeys0.FK_CONTRACT_PARTICIPATE_ASSET_ISSUE_TO_ID;
    public static final ForeignKey<ContractParticipateAssetIssueRecord, TransactionRecord> FK_CONTRACT_PARTICIPATE_ASSET_ISSUE_TX_ID = ForeignKeys0.FK_CONTRACT_PARTICIPATE_ASSET_ISSUE_TX_ID;
    public static final ForeignKey<ContractProposalApproveRecord, TransactionRecord> FK_CONTRACT_PROPOSAL_APPROVE_TX_ID = ForeignKeys0.FK_CONTRACT_PROPOSAL_APPROVE_TX_ID;
    public static final ForeignKey<ContractProposalCreateRecord, TransactionRecord> FK_CONTRACT_PROPOSAL_CREATE_TX_ID = ForeignKeys0.FK_CONTRACT_PROPOSAL_CREATE_TX_ID;
    public static final ForeignKey<ContractProposalDeleteRecord, TransactionRecord> FK_CONTRACT_PROPOSAL_DELETE_TX_ID = ForeignKeys0.FK_CONTRACT_PROPOSAL_DELETE_TX_ID;
    public static final ForeignKey<ContractSellStorageRecord, TransactionRecord> FK_CONTRACT_SELL_STORAGE_TX_ID = ForeignKeys0.FK_CONTRACT_SELL_STORAGE_TX_ID;
    public static final ForeignKey<ContractSetAccountIdRecord, TransactionRecord> FK_CONTRACT_SET_ACCOUNT_ID_TX_ID = ForeignKeys0.FK_CONTRACT_SET_ACCOUNT_ID_TX_ID;
    public static final ForeignKey<ContractTransferRecord, AccountRecord> FK_CONTRACT_TRANSFER_OWNER_ID = ForeignKeys0.FK_CONTRACT_TRANSFER_OWNER_ID;
    public static final ForeignKey<ContractTransferRecord, AccountRecord> FK_CONTRACT_TRANSFER_TO_ID = ForeignKeys0.FK_CONTRACT_TRANSFER_TO_ID;
    public static final ForeignKey<ContractTransferRecord, TransactionRecord> FK_CONTRACT_TRANSFER_TX_ID = ForeignKeys0.FK_CONTRACT_TRANSFER_TX_ID;
    public static final ForeignKey<ContractTransferAssetRecord, AccountRecord> FK_CONTRACT_TRANSFER_ASSET_OWNER_ID = ForeignKeys0.FK_CONTRACT_TRANSFER_ASSET_OWNER_ID;
    public static final ForeignKey<ContractTransferAssetRecord, AccountRecord> FK_CONTRACT_TRANSFER_ASSET_TO_ID = ForeignKeys0.FK_CONTRACT_TRANSFER_ASSET_TO_ID;
    public static final ForeignKey<ContractTransferAssetRecord, TransactionRecord> FK_CONTRACT_TRANSFER_ASSET_TX_ID = ForeignKeys0.FK_CONTRACT_TRANSFER_ASSET_TX_ID;
    public static final ForeignKey<ContractTriggerSmartcontractRecord, TransactionRecord> FK_CONTRACT_TRIGGER_SMARTCONTRACT_TX_ID = ForeignKeys0.FK_CONTRACT_TRIGGER_SMARTCONTRACT_TX_ID;
    public static final ForeignKey<ContractUnfreezeAssetRecord, TransactionRecord> FK_CONTRACT_UNFREEZE_ASSET_TX_ID = ForeignKeys0.FK_CONTRACT_UNFREEZE_ASSET_TX_ID;
    public static final ForeignKey<ContractUnfreezeBalanceRecord, TransactionRecord> FK_CONTRACT_UNFREEZE_BALANCE_TX_ID = ForeignKeys0.FK_CONTRACT_UNFREEZE_BALANCE_TX_ID;
    public static final ForeignKey<ContractUnfreezeBalanceRecord, AccountRecord> FK_CONTRACT_UNFREEZE_BALANCE_OWNER_ID = ForeignKeys0.FK_CONTRACT_UNFREEZE_BALANCE_OWNER_ID;
    public static final ForeignKey<ContractUpdateAssetRecord, TransactionRecord> FK_CONTRACT_UPDATE_ASSET_TX_ID = ForeignKeys0.FK_CONTRACT_UPDATE_ASSET_TX_ID;
    public static final ForeignKey<ContractUpdateSettingRecord, TransactionRecord> FK_CONTRACT_UPDATE_SETTING_TX_ID = ForeignKeys0.FK_CONTRACT_UPDATE_SETTING_TX_ID;
    public static final ForeignKey<ContractVoteAssetRecord, AccountRecord> FK_CONTRACT_VOTE_ASSET_OWNER_ID = ForeignKeys0.FK_CONTRACT_VOTE_ASSET_OWNER_ID;
    public static final ForeignKey<ContractVoteAssetRecord, TransactionRecord> FK_CONTRACT_VOTE_ASSET_TX_ID = ForeignKeys0.FK_CONTRACT_VOTE_ASSET_TX_ID;
    public static final ForeignKey<ContractVoteAssetVoteRecord, AccountRecord> FK_CONTRACT_VOTE_ASSET_VOTE_OWNER_ID = ForeignKeys0.FK_CONTRACT_VOTE_ASSET_VOTE_OWNER_ID;
    public static final ForeignKey<ContractVoteAssetVoteRecord, ContractVoteAssetRecord> FK_CONTRACT_VOTE_ASSET_VOTE_VA_ID = ForeignKeys0.FK_CONTRACT_VOTE_ASSET_VOTE_VA_ID;
    public static final ForeignKey<ContractVoteWitnessRecord, AccountRecord> FK_CONTRACT_VOTE_WITNESS_OWNER_ID = ForeignKeys0.FK_CONTRACT_VOTE_WITNESS_OWNER_ID;
    public static final ForeignKey<ContractVoteWitnessRecord, TransactionRecord> FK_CONTRACT_VOTE_WITNESS_TX_ID = ForeignKeys0.FK_CONTRACT_VOTE_WITNESS_TX_ID;
    public static final ForeignKey<ContractVoteWitnessVoteRecord, AccountRecord> FK_CONTRACT_VOTE_WITNESS_VOTE_OWNER_ID = ForeignKeys0.FK_CONTRACT_VOTE_WITNESS_VOTE_OWNER_ID;
    public static final ForeignKey<ContractVoteWitnessVoteRecord, ContractVoteWitnessRecord> FK_CONTRACT_VOTE_WITNESS_VOTE_VW_ID = ForeignKeys0.FK_CONTRACT_VOTE_WITNESS_VOTE_VW_ID;
    public static final ForeignKey<ContractWithdrawBalanceRecord, TransactionRecord> FK_CONTRACT_WITHDRAW_BALANCE_TX_ID = ForeignKeys0.FK_CONTRACT_WITHDRAW_BALANCE_TX_ID;
    public static final ForeignKey<ContractWithdrawBalanceRecord, AccountRecord> FK_CONTRACT_WITHDRAW_BALANCE_OWNER_ID = ForeignKeys0.FK_CONTRACT_WITHDRAW_BALANCE_OWNER_ID;
    public static final ForeignKey<ContractWitnessCreateRecord, AccountRecord> FK_CONTRACT_WITNESS_CREATE_OWNER_ID = ForeignKeys0.FK_CONTRACT_WITNESS_CREATE_OWNER_ID;
    public static final ForeignKey<ContractWitnessCreateRecord, TransactionRecord> FK_CONTRACT_WITNESS_CREATE_TX_ID = ForeignKeys0.FK_CONTRACT_WITNESS_CREATE_TX_ID;
    public static final ForeignKey<ContractWitnessUpdateRecord, AccountRecord> FK_CONTRACT_WITNESS_UPDATE_OWNER_ID = ForeignKeys0.FK_CONTRACT_WITNESS_UPDATE_OWNER_ID;
    public static final ForeignKey<ContractWitnessUpdateRecord, TransactionRecord> FK_CONTRACT_WITNESS_UPDATE_TX_ID = ForeignKeys0.FK_CONTRACT_WITNESS_UPDATE_TX_ID;
    public static final ForeignKey<TransactionRecord, BlockRecord> FK_TRANSACTION_BLOCK = ForeignKeys0.FK_TRANSACTION_BLOCK;
    public static final ForeignKey<TransactionResultRecord, TransactionRecord> FK_TRANSACTION_RESULT_TX_ID = ForeignKeys0.FK_TRANSACTION_RESULT_TX_ID;
    public static final ForeignKey<TransferRecord, TransactionRecord> FK_TRANSFER_TX_ID = ForeignKeys0.FK_TRANSFER_TX_ID;
    public static final ForeignKey<VotingRoundStatsRecord, VotingRoundRecord> FK_VOTING_ROUND_STATS_VOTIN_ROUND_ID = ForeignKeys0.FK_VOTING_ROUND_STATS_VOTIN_ROUND_ID;
    public static final ForeignKey<VotingRoundVoteRecord, VotingRoundRecord> FK_VOTING_ROUND_VOTE_ID = ForeignKeys0.FK_VOTING_ROUND_VOTE_ID;
    public static final ForeignKey<VotingRoundVoteLostRecord, VotingRoundRecord> FK_VOTING_ROUND_VOTE_LOST_VOTING_ROUND_ID = ForeignKeys0.FK_VOTING_ROUND_VOTE_LOST_VOTING_ROUND_ID;
    public static final ForeignKey<WitnessRecord, AccountRecord> FK_WITNESS_ACCOUNT_ID = ForeignKeys0.FK_WITNESS_ACCOUNT_ID;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 extends AbstractKeys {
        public static Identity<AccountRecord, ULong> IDENTITY_ACCOUNT = createIdentity(Account.ACCOUNT, Account.ACCOUNT.ID);
        public static Identity<AccountAssetRecord, ULong> IDENTITY_ACCOUNT_ASSET = createIdentity(AccountAsset.ACCOUNT_ASSET, AccountAsset.ACCOUNT_ASSET.ID);
        public static Identity<AccountFrozenRecord, ULong> IDENTITY_ACCOUNT_FROZEN = createIdentity(AccountFrozen.ACCOUNT_FROZEN, AccountFrozen.ACCOUNT_FROZEN.ID);
        public static Identity<AccountVoteRecord, ULong> IDENTITY_ACCOUNT_VOTE = createIdentity(AccountVote.ACCOUNT_VOTE, AccountVote.ACCOUNT_VOTE.ID);
        public static Identity<BlockRecord, ULong> IDENTITY_BLOCK = createIdentity(Block.BLOCK, Block.BLOCK.ID);
        public static Identity<BlockErrorRecord, ULong> IDENTITY_BLOCK_ERROR = createIdentity(BlockError.BLOCK_ERROR, BlockError.BLOCK_ERROR.ID);
        public static Identity<ChartDailyRecord, ULong> IDENTITY_CHART_DAILY = createIdentity(ChartDaily.CHART_DAILY, ChartDaily.CHART_DAILY.ID);
        public static Identity<ContractAccountCreateRecord, ULong> IDENTITY_CONTRACT_ACCOUNT_CREATE = createIdentity(ContractAccountCreate.CONTRACT_ACCOUNT_CREATE, ContractAccountCreate.CONTRACT_ACCOUNT_CREATE.ID);
        public static Identity<ContractAccountUpdateRecord, ULong> IDENTITY_CONTRACT_ACCOUNT_UPDATE = createIdentity(ContractAccountUpdate.CONTRACT_ACCOUNT_UPDATE, ContractAccountUpdate.CONTRACT_ACCOUNT_UPDATE.ID);
        public static Identity<ContractAssetIssueRecord, ULong> IDENTITY_CONTRACT_ASSET_ISSUE = createIdentity(ContractAssetIssue.CONTRACT_ASSET_ISSUE, ContractAssetIssue.CONTRACT_ASSET_ISSUE.ID);
        public static Identity<ContractBuyStorageRecord, ULong> IDENTITY_CONTRACT_BUY_STORAGE = createIdentity(ContractBuyStorage.CONTRACT_BUY_STORAGE, ContractBuyStorage.CONTRACT_BUY_STORAGE.ID);
        public static Identity<ContractBuyStorageBytesRecord, ULong> IDENTITY_CONTRACT_BUY_STORAGE_BYTES = createIdentity(ContractBuyStorageBytes.CONTRACT_BUY_STORAGE_BYTES, ContractBuyStorageBytes.CONTRACT_BUY_STORAGE_BYTES.ID);
        public static Identity<ContractCreateSmartcontractRecord, ULong> IDENTITY_CONTRACT_CREATE_SMARTCONTRACT = createIdentity(ContractCreateSmartcontract.CONTRACT_CREATE_SMARTCONTRACT, ContractCreateSmartcontract.CONTRACT_CREATE_SMARTCONTRACT.ID);
        public static Identity<ContractDeployRecord, ULong> IDENTITY_CONTRACT_DEPLOY = createIdentity(ContractDeploy.CONTRACT_DEPLOY, ContractDeploy.CONTRACT_DEPLOY.ID);
        public static Identity<ContractExchangeCreateRecord, ULong> IDENTITY_CONTRACT_EXCHANGE_CREATE = createIdentity(ContractExchangeCreate.CONTRACT_EXCHANGE_CREATE, ContractExchangeCreate.CONTRACT_EXCHANGE_CREATE.ID);
        public static Identity<ContractExchangeInjectRecord, ULong> IDENTITY_CONTRACT_EXCHANGE_INJECT = createIdentity(ContractExchangeInject.CONTRACT_EXCHANGE_INJECT, ContractExchangeInject.CONTRACT_EXCHANGE_INJECT.ID);
        public static Identity<ContractExchangeTransactionContractRecord, ULong> IDENTITY_CONTRACT_EXCHANGE_TRANSACTION_CONTRACT = createIdentity(ContractExchangeTransactionContract.CONTRACT_EXCHANGE_TRANSACTION_CONTRACT, ContractExchangeTransactionContract.CONTRACT_EXCHANGE_TRANSACTION_CONTRACT.ID);
        public static Identity<ContractExchangeWithdrawContractRecord, ULong> IDENTITY_CONTRACT_EXCHANGE_WITHDRAW_CONTRACT = createIdentity(ContractExchangeWithdrawContract.CONTRACT_EXCHANGE_WITHDRAW_CONTRACT, ContractExchangeWithdrawContract.CONTRACT_EXCHANGE_WITHDRAW_CONTRACT.ID);
        public static Identity<ContractFreezeBalanceRecord, ULong> IDENTITY_CONTRACT_FREEZE_BALANCE = createIdentity(ContractFreezeBalance.CONTRACT_FREEZE_BALANCE, ContractFreezeBalance.CONTRACT_FREEZE_BALANCE.ID);
        public static Identity<ContractParticipateAssetIssueRecord, ULong> IDENTITY_CONTRACT_PARTICIPATE_ASSET_ISSUE = createIdentity(ContractParticipateAssetIssue.CONTRACT_PARTICIPATE_ASSET_ISSUE, ContractParticipateAssetIssue.CONTRACT_PARTICIPATE_ASSET_ISSUE.ID);
        public static Identity<ContractProposalApproveRecord, ULong> IDENTITY_CONTRACT_PROPOSAL_APPROVE = createIdentity(ContractProposalApprove.CONTRACT_PROPOSAL_APPROVE, ContractProposalApprove.CONTRACT_PROPOSAL_APPROVE.ID);
        public static Identity<ContractProposalCreateRecord, ULong> IDENTITY_CONTRACT_PROPOSAL_CREATE = createIdentity(ContractProposalCreate.CONTRACT_PROPOSAL_CREATE, ContractProposalCreate.CONTRACT_PROPOSAL_CREATE.ID);
        public static Identity<ContractProposalDeleteRecord, ULong> IDENTITY_CONTRACT_PROPOSAL_DELETE = createIdentity(ContractProposalDelete.CONTRACT_PROPOSAL_DELETE, ContractProposalDelete.CONTRACT_PROPOSAL_DELETE.ID);
        public static Identity<ContractSellStorageRecord, ULong> IDENTITY_CONTRACT_SELL_STORAGE = createIdentity(ContractSellStorage.CONTRACT_SELL_STORAGE, ContractSellStorage.CONTRACT_SELL_STORAGE.ID);
        public static Identity<ContractSetAccountIdRecord, ULong> IDENTITY_CONTRACT_SET_ACCOUNT_ID = createIdentity(ContractSetAccountId.CONTRACT_SET_ACCOUNT_ID, ContractSetAccountId.CONTRACT_SET_ACCOUNT_ID.ID);
        public static Identity<ContractTransferRecord, ULong> IDENTITY_CONTRACT_TRANSFER = createIdentity(ContractTransfer.CONTRACT_TRANSFER, ContractTransfer.CONTRACT_TRANSFER.ID);
        public static Identity<ContractTransferAssetRecord, ULong> IDENTITY_CONTRACT_TRANSFER_ASSET = createIdentity(ContractTransferAsset.CONTRACT_TRANSFER_ASSET, ContractTransferAsset.CONTRACT_TRANSFER_ASSET.ID);
        public static Identity<ContractTriggerSmartcontractRecord, ULong> IDENTITY_CONTRACT_TRIGGER_SMARTCONTRACT = createIdentity(ContractTriggerSmartcontract.CONTRACT_TRIGGER_SMARTCONTRACT, ContractTriggerSmartcontract.CONTRACT_TRIGGER_SMARTCONTRACT.ID);
        public static Identity<ContractUnfreezeAssetRecord, ULong> IDENTITY_CONTRACT_UNFREEZE_ASSET = createIdentity(ContractUnfreezeAsset.CONTRACT_UNFREEZE_ASSET, ContractUnfreezeAsset.CONTRACT_UNFREEZE_ASSET.ID);
        public static Identity<ContractUnfreezeBalanceRecord, ULong> IDENTITY_CONTRACT_UNFREEZE_BALANCE = createIdentity(ContractUnfreezeBalance.CONTRACT_UNFREEZE_BALANCE, ContractUnfreezeBalance.CONTRACT_UNFREEZE_BALANCE.ID);
        public static Identity<ContractUpdateAssetRecord, ULong> IDENTITY_CONTRACT_UPDATE_ASSET = createIdentity(ContractUpdateAsset.CONTRACT_UPDATE_ASSET, ContractUpdateAsset.CONTRACT_UPDATE_ASSET.ID);
        public static Identity<ContractUpdateSettingRecord, ULong> IDENTITY_CONTRACT_UPDATE_SETTING = createIdentity(ContractUpdateSetting.CONTRACT_UPDATE_SETTING, ContractUpdateSetting.CONTRACT_UPDATE_SETTING.ID);
        public static Identity<ContractVoteAssetRecord, ULong> IDENTITY_CONTRACT_VOTE_ASSET = createIdentity(ContractVoteAsset.CONTRACT_VOTE_ASSET, ContractVoteAsset.CONTRACT_VOTE_ASSET.ID);
        public static Identity<ContractVoteAssetVoteRecord, ULong> IDENTITY_CONTRACT_VOTE_ASSET_VOTE = createIdentity(ContractVoteAssetVote.CONTRACT_VOTE_ASSET_VOTE, ContractVoteAssetVote.CONTRACT_VOTE_ASSET_VOTE.ID);
        public static Identity<ContractVoteWitnessRecord, ULong> IDENTITY_CONTRACT_VOTE_WITNESS = createIdentity(ContractVoteWitness.CONTRACT_VOTE_WITNESS, ContractVoteWitness.CONTRACT_VOTE_WITNESS.ID);
        public static Identity<ContractVoteWitnessVoteRecord, ULong> IDENTITY_CONTRACT_VOTE_WITNESS_VOTE = createIdentity(ContractVoteWitnessVote.CONTRACT_VOTE_WITNESS_VOTE, ContractVoteWitnessVote.CONTRACT_VOTE_WITNESS_VOTE.ID);
        public static Identity<ContractWithdrawBalanceRecord, ULong> IDENTITY_CONTRACT_WITHDRAW_BALANCE = createIdentity(ContractWithdrawBalance.CONTRACT_WITHDRAW_BALANCE, ContractWithdrawBalance.CONTRACT_WITHDRAW_BALANCE.ID);
        public static Identity<ContractWitnessCreateRecord, UInteger> IDENTITY_CONTRACT_WITNESS_CREATE = createIdentity(ContractWitnessCreate.CONTRACT_WITNESS_CREATE, ContractWitnessCreate.CONTRACT_WITNESS_CREATE.ID);
        public static Identity<ContractWitnessUpdateRecord, ULong> IDENTITY_CONTRACT_WITNESS_UPDATE = createIdentity(ContractWitnessUpdate.CONTRACT_WITNESS_UPDATE, ContractWitnessUpdate.CONTRACT_WITNESS_UPDATE.ID);
        public static Identity<MarketRecord, UInteger> IDENTITY_MARKET = createIdentity(Market.MARKET, Market.MARKET.ID);
        public static Identity<NodeRecord, ULong> IDENTITY_NODE = createIdentity(Node.NODE, Node.NODE.ID);
        public static Identity<SyncAccountRecord, ULong> IDENTITY_SYNC_ACCOUNT = createIdentity(SyncAccount.SYNC_ACCOUNT, SyncAccount.SYNC_ACCOUNT.ID);
        public static Identity<SyncBlockRecord, ULong> IDENTITY_SYNC_BLOCK = createIdentity(SyncBlock.SYNC_BLOCK, SyncBlock.SYNC_BLOCK.ID);
        public static Identity<SyncNodeRecord, UInteger> IDENTITY_SYNC_NODE = createIdentity(SyncNode.SYNC_NODE, SyncNode.SYNC_NODE.ID);
        public static Identity<TransactionRecord, ULong> IDENTITY_TRANSACTION = createIdentity(Transaction.TRANSACTION, Transaction.TRANSACTION.ID);
        public static Identity<TransactionResultRecord, ULong> IDENTITY_TRANSACTION_RESULT = createIdentity(TransactionResult.TRANSACTION_RESULT, TransactionResult.TRANSACTION_RESULT.ID);
        public static Identity<TransferRecord, ULong> IDENTITY_TRANSFER = createIdentity(Transfer.TRANSFER, Transfer.TRANSFER.ID);
        public static Identity<VotingRoundRecord, UInteger> IDENTITY_VOTING_ROUND = createIdentity(VotingRound.VOTING_ROUND, VotingRound.VOTING_ROUND.ID);
        public static Identity<VotingRoundStatsRecord, UInteger> IDENTITY_VOTING_ROUND_STATS = createIdentity(VotingRoundStats.VOTING_ROUND_STATS, VotingRoundStats.VOTING_ROUND_STATS.ID);
        public static Identity<VotingRoundVoteRecord, ULong> IDENTITY_VOTING_ROUND_VOTE = createIdentity(VotingRoundVote.VOTING_ROUND_VOTE, VotingRoundVote.VOTING_ROUND_VOTE.ID);
        public static Identity<VotingRoundVoteLostRecord, ULong> IDENTITY_VOTING_ROUND_VOTE_LOST = createIdentity(VotingRoundVoteLost.VOTING_ROUND_VOTE_LOST, VotingRoundVoteLost.VOTING_ROUND_VOTE_LOST.ID);
        public static Identity<WitnessRecord, ULong> IDENTITY_WITNESS = createIdentity(Witness.WITNESS, Witness.WITNESS.ID);
    }

    private static class UniqueKeys0 extends AbstractKeys {
        public static final UniqueKey<AccountRecord> KEY_ACCOUNT_PRIMARY = createUniqueKey(Account.ACCOUNT, "KEY_account_PRIMARY", Account.ACCOUNT.ID);
        public static final UniqueKey<AccountRecord> KEY_ACCOUNT_ACCOUNT_ADDRESS_UNIQUE = createUniqueKey(Account.ACCOUNT, "KEY_account_account_address_unique", Account.ACCOUNT.ADDRESS);
        public static final UniqueKey<AccountAssetRecord> KEY_ACCOUNT_ASSET_PRIMARY = createUniqueKey(AccountAsset.ACCOUNT_ASSET, "KEY_account_asset_PRIMARY", AccountAsset.ACCOUNT_ASSET.ID);
        public static final UniqueKey<AccountAssetRecord> KEY_ACCOUNT_ASSET_ACCOUNT_ASSET_UNIQUE = createUniqueKey(AccountAsset.ACCOUNT_ASSET, "KEY_account_asset_account_asset_unique", AccountAsset.ACCOUNT_ASSET.ASSET_NAME, AccountAsset.ACCOUNT_ASSET.ACCOUNT_ID, AccountAsset.ACCOUNT_ASSET.BALANCE);
        public static final UniqueKey<AccountFrozenRecord> KEY_ACCOUNT_FROZEN_PRIMARY = createUniqueKey(AccountFrozen.ACCOUNT_FROZEN, "KEY_account_frozen_PRIMARY", AccountFrozen.ACCOUNT_FROZEN.ID);
        public static final UniqueKey<AccountFrozenRecord> KEY_ACCOUNT_FROZEN_UNIQUE_BALANCE_EXPIRE_TIME = createUniqueKey(AccountFrozen.ACCOUNT_FROZEN, "KEY_account_frozen_unique_balance_expire_time", AccountFrozen.ACCOUNT_FROZEN.BALANCE, AccountFrozen.ACCOUNT_FROZEN.EXPIRE_TIME, AccountFrozen.ACCOUNT_FROZEN.ACCOUNT_ID);
        public static final UniqueKey<AccountVoteRecord> KEY_ACCOUNT_VOTE_PRIMARY = createUniqueKey(AccountVote.ACCOUNT_VOTE, "KEY_account_vote_PRIMARY", AccountVote.ACCOUNT_VOTE.ID);
        public static final UniqueKey<AccountVoteRecord> KEY_ACCOUNT_VOTE_ACCOUNT_VOTE_UNIQUE = createUniqueKey(AccountVote.ACCOUNT_VOTE, "KEY_account_vote_account_vote_unique", AccountVote.ACCOUNT_VOTE.ACCOUNT_ID, AccountVote.ACCOUNT_VOTE.VOTE_ADDRESS, AccountVote.ACCOUNT_VOTE.VOTE_COUNT);
        public static final UniqueKey<BlockRecord> KEY_BLOCK_PRIMARY = createUniqueKey(Block.BLOCK, "KEY_block_PRIMARY", Block.BLOCK.ID);
        public static final UniqueKey<BlockRecord> KEY_BLOCK_NUM_UNIQUE = createUniqueKey(Block.BLOCK, "KEY_block_num_UNIQUE", Block.BLOCK.NUM);
        public static final UniqueKey<BlockErrorRecord> KEY_BLOCK_ERROR_PRIMARY = createUniqueKey(BlockError.BLOCK_ERROR, "KEY_block_error_PRIMARY", BlockError.BLOCK_ERROR.ID);
        public static final UniqueKey<BlockResyncRecord> KEY_BLOCK_RESYNC_PRIMARY = createUniqueKey(BlockResync.BLOCK_RESYNC, "KEY_block_resync_PRIMARY", BlockResync.BLOCK_RESYNC.NUM);
        public static final UniqueKey<ChartDailyRecord> KEY_CHART_DAILY_PRIMARY = createUniqueKey(ChartDaily.CHART_DAILY, "KEY_chart_daily_PRIMARY", ChartDaily.CHART_DAILY.ID);
        public static final UniqueKey<ChartDailyRecord> KEY_CHART_DAILY_DAY_MONT_YEAR_UNIQUE = createUniqueKey(ChartDaily.CHART_DAILY, "KEY_chart_daily_day_mont_year_unique", ChartDaily.CHART_DAILY.DAY, ChartDaily.CHART_DAILY.MONTH, ChartDaily.CHART_DAILY.YEAR);
        public static final UniqueKey<ContractAccountCreateRecord> KEY_CONTRACT_ACCOUNT_CREATE_PRIMARY = createUniqueKey(ContractAccountCreate.CONTRACT_ACCOUNT_CREATE, "KEY_contract_account_create_PRIMARY", ContractAccountCreate.CONTRACT_ACCOUNT_CREATE.ID);
        public static final UniqueKey<ContractAccountUpdateRecord> KEY_CONTRACT_ACCOUNT_UPDATE_PRIMARY = createUniqueKey(ContractAccountUpdate.CONTRACT_ACCOUNT_UPDATE, "KEY_contract_account_update_PRIMARY", ContractAccountUpdate.CONTRACT_ACCOUNT_UPDATE.ID);
        public static final UniqueKey<ContractAssetIssueRecord> KEY_CONTRACT_ASSET_ISSUE_PRIMARY = createUniqueKey(ContractAssetIssue.CONTRACT_ASSET_ISSUE, "KEY_contract_asset_issue_PRIMARY", ContractAssetIssue.CONTRACT_ASSET_ISSUE.ID);
        public static final UniqueKey<ContractBuyStorageRecord> KEY_CONTRACT_BUY_STORAGE_PRIMARY = createUniqueKey(ContractBuyStorage.CONTRACT_BUY_STORAGE, "KEY_contract_buy_storage_PRIMARY", ContractBuyStorage.CONTRACT_BUY_STORAGE.ID);
        public static final UniqueKey<ContractBuyStorageBytesRecord> KEY_CONTRACT_BUY_STORAGE_BYTES_PRIMARY = createUniqueKey(ContractBuyStorageBytes.CONTRACT_BUY_STORAGE_BYTES, "KEY_contract_buy_storage_bytes_PRIMARY", ContractBuyStorageBytes.CONTRACT_BUY_STORAGE_BYTES.ID);
        public static final UniqueKey<ContractCreateSmartcontractRecord> KEY_CONTRACT_CREATE_SMARTCONTRACT_PRIMARY = createUniqueKey(ContractCreateSmartcontract.CONTRACT_CREATE_SMARTCONTRACT, "KEY_contract_create_smartcontract_PRIMARY", ContractCreateSmartcontract.CONTRACT_CREATE_SMARTCONTRACT.ID);
        public static final UniqueKey<ContractDeployRecord> KEY_CONTRACT_DEPLOY_PRIMARY = createUniqueKey(ContractDeploy.CONTRACT_DEPLOY, "KEY_contract_deploy_PRIMARY", ContractDeploy.CONTRACT_DEPLOY.ID);
        public static final UniqueKey<ContractExchangeCreateRecord> KEY_CONTRACT_EXCHANGE_CREATE_PRIMARY = createUniqueKey(ContractExchangeCreate.CONTRACT_EXCHANGE_CREATE, "KEY_contract_exchange_create_PRIMARY", ContractExchangeCreate.CONTRACT_EXCHANGE_CREATE.ID);
        public static final UniqueKey<ContractExchangeInjectRecord> KEY_CONTRACT_EXCHANGE_INJECT_PRIMARY = createUniqueKey(ContractExchangeInject.CONTRACT_EXCHANGE_INJECT, "KEY_contract_exchange_inject_PRIMARY", ContractExchangeInject.CONTRACT_EXCHANGE_INJECT.ID);
        public static final UniqueKey<ContractExchangeTransactionContractRecord> KEY_CONTRACT_EXCHANGE_TRANSACTION_CONTRACT_PRIMARY = createUniqueKey(ContractExchangeTransactionContract.CONTRACT_EXCHANGE_TRANSACTION_CONTRACT, "KEY_contract_exchange_transaction_contract_PRIMARY", ContractExchangeTransactionContract.CONTRACT_EXCHANGE_TRANSACTION_CONTRACT.ID);
        public static final UniqueKey<ContractExchangeWithdrawContractRecord> KEY_CONTRACT_EXCHANGE_WITHDRAW_CONTRACT_PRIMARY = createUniqueKey(ContractExchangeWithdrawContract.CONTRACT_EXCHANGE_WITHDRAW_CONTRACT, "KEY_contract_exchange_withdraw_contract_PRIMARY", ContractExchangeWithdrawContract.CONTRACT_EXCHANGE_WITHDRAW_CONTRACT.ID);
        public static final UniqueKey<ContractFreezeBalanceRecord> KEY_CONTRACT_FREEZE_BALANCE_PRIMARY = createUniqueKey(ContractFreezeBalance.CONTRACT_FREEZE_BALANCE, "KEY_contract_freeze_balance_PRIMARY", ContractFreezeBalance.CONTRACT_FREEZE_BALANCE.ID);
        public static final UniqueKey<ContractParticipateAssetIssueRecord> KEY_CONTRACT_PARTICIPATE_ASSET_ISSUE_PRIMARY = createUniqueKey(ContractParticipateAssetIssue.CONTRACT_PARTICIPATE_ASSET_ISSUE, "KEY_contract_participate_asset_issue_PRIMARY", ContractParticipateAssetIssue.CONTRACT_PARTICIPATE_ASSET_ISSUE.ID);
        public static final UniqueKey<ContractProposalApproveRecord> KEY_CONTRACT_PROPOSAL_APPROVE_PRIMARY = createUniqueKey(ContractProposalApprove.CONTRACT_PROPOSAL_APPROVE, "KEY_contract_proposal_approve_PRIMARY", ContractProposalApprove.CONTRACT_PROPOSAL_APPROVE.ID);
        public static final UniqueKey<ContractProposalCreateRecord> KEY_CONTRACT_PROPOSAL_CREATE_PRIMARY = createUniqueKey(ContractProposalCreate.CONTRACT_PROPOSAL_CREATE, "KEY_contract_proposal_create_PRIMARY", ContractProposalCreate.CONTRACT_PROPOSAL_CREATE.ID);
        public static final UniqueKey<ContractProposalDeleteRecord> KEY_CONTRACT_PROPOSAL_DELETE_PRIMARY = createUniqueKey(ContractProposalDelete.CONTRACT_PROPOSAL_DELETE, "KEY_contract_proposal_delete_PRIMARY", ContractProposalDelete.CONTRACT_PROPOSAL_DELETE.ID);
        public static final UniqueKey<ContractSellStorageRecord> KEY_CONTRACT_SELL_STORAGE_PRIMARY = createUniqueKey(ContractSellStorage.CONTRACT_SELL_STORAGE, "KEY_contract_sell_storage_PRIMARY", ContractSellStorage.CONTRACT_SELL_STORAGE.ID);
        public static final UniqueKey<ContractSetAccountIdRecord> KEY_CONTRACT_SET_ACCOUNT_ID_PRIMARY = createUniqueKey(ContractSetAccountId.CONTRACT_SET_ACCOUNT_ID, "KEY_contract_set_account_id_PRIMARY", ContractSetAccountId.CONTRACT_SET_ACCOUNT_ID.ID);
        public static final UniqueKey<ContractTransferRecord> KEY_CONTRACT_TRANSFER_PRIMARY = createUniqueKey(ContractTransfer.CONTRACT_TRANSFER, "KEY_contract_transfer_PRIMARY", ContractTransfer.CONTRACT_TRANSFER.ID);
        public static final UniqueKey<ContractTransferAssetRecord> KEY_CONTRACT_TRANSFER_ASSET_PRIMARY = createUniqueKey(ContractTransferAsset.CONTRACT_TRANSFER_ASSET, "KEY_contract_transfer_asset_PRIMARY", ContractTransferAsset.CONTRACT_TRANSFER_ASSET.ID);
        public static final UniqueKey<ContractTriggerSmartcontractRecord> KEY_CONTRACT_TRIGGER_SMARTCONTRACT_PRIMARY = createUniqueKey(ContractTriggerSmartcontract.CONTRACT_TRIGGER_SMARTCONTRACT, "KEY_contract_trigger_smartcontract_PRIMARY", ContractTriggerSmartcontract.CONTRACT_TRIGGER_SMARTCONTRACT.ID);
        public static final UniqueKey<ContractUnfreezeAssetRecord> KEY_CONTRACT_UNFREEZE_ASSET_PRIMARY = createUniqueKey(ContractUnfreezeAsset.CONTRACT_UNFREEZE_ASSET, "KEY_contract_unfreeze_asset_PRIMARY", ContractUnfreezeAsset.CONTRACT_UNFREEZE_ASSET.ID);
        public static final UniqueKey<ContractUnfreezeBalanceRecord> KEY_CONTRACT_UNFREEZE_BALANCE_PRIMARY = createUniqueKey(ContractUnfreezeBalance.CONTRACT_UNFREEZE_BALANCE, "KEY_contract_unfreeze_balance_PRIMARY", ContractUnfreezeBalance.CONTRACT_UNFREEZE_BALANCE.ID);
        public static final UniqueKey<ContractUpdateAssetRecord> KEY_CONTRACT_UPDATE_ASSET_PRIMARY = createUniqueKey(ContractUpdateAsset.CONTRACT_UPDATE_ASSET, "KEY_contract_update_asset_PRIMARY", ContractUpdateAsset.CONTRACT_UPDATE_ASSET.ID);
        public static final UniqueKey<ContractUpdateSettingRecord> KEY_CONTRACT_UPDATE_SETTING_PRIMARY = createUniqueKey(ContractUpdateSetting.CONTRACT_UPDATE_SETTING, "KEY_contract_update_setting_PRIMARY", ContractUpdateSetting.CONTRACT_UPDATE_SETTING.ID);
        public static final UniqueKey<ContractVoteAssetRecord> KEY_CONTRACT_VOTE_ASSET_PRIMARY = createUniqueKey(ContractVoteAsset.CONTRACT_VOTE_ASSET, "KEY_contract_vote_asset_PRIMARY", ContractVoteAsset.CONTRACT_VOTE_ASSET.ID);
        public static final UniqueKey<ContractVoteAssetVoteRecord> KEY_CONTRACT_VOTE_ASSET_VOTE_PRIMARY = createUniqueKey(ContractVoteAssetVote.CONTRACT_VOTE_ASSET_VOTE, "KEY_contract_vote_asset_vote_PRIMARY", ContractVoteAssetVote.CONTRACT_VOTE_ASSET_VOTE.ID);
        public static final UniqueKey<ContractVoteWitnessRecord> KEY_CONTRACT_VOTE_WITNESS_PRIMARY = createUniqueKey(ContractVoteWitness.CONTRACT_VOTE_WITNESS, "KEY_contract_vote_witness_PRIMARY", ContractVoteWitness.CONTRACT_VOTE_WITNESS.ID);
        public static final UniqueKey<ContractVoteWitnessVoteRecord> KEY_CONTRACT_VOTE_WITNESS_VOTE_PRIMARY = createUniqueKey(ContractVoteWitnessVote.CONTRACT_VOTE_WITNESS_VOTE, "KEY_contract_vote_witness_vote_PRIMARY", ContractVoteWitnessVote.CONTRACT_VOTE_WITNESS_VOTE.ID);
        public static final UniqueKey<ContractWithdrawBalanceRecord> KEY_CONTRACT_WITHDRAW_BALANCE_PRIMARY = createUniqueKey(ContractWithdrawBalance.CONTRACT_WITHDRAW_BALANCE, "KEY_contract_withdraw_balance_PRIMARY", ContractWithdrawBalance.CONTRACT_WITHDRAW_BALANCE.ID);
        public static final UniqueKey<ContractWitnessCreateRecord> KEY_CONTRACT_WITNESS_CREATE_PRIMARY = createUniqueKey(ContractWitnessCreate.CONTRACT_WITNESS_CREATE, "KEY_contract_witness_create_PRIMARY", ContractWitnessCreate.CONTRACT_WITNESS_CREATE.ID);
        public static final UniqueKey<ContractWitnessUpdateRecord> KEY_CONTRACT_WITNESS_UPDATE_PRIMARY = createUniqueKey(ContractWitnessUpdate.CONTRACT_WITNESS_UPDATE, "KEY_contract_witness_update_PRIMARY", ContractWitnessUpdate.CONTRACT_WITNESS_UPDATE.ID);
        public static final UniqueKey<MarketRecord> KEY_MARKET_PRIMARY = createUniqueKey(Market.MARKET, "KEY_market_PRIMARY", Market.MARKET.ID);
        public static final UniqueKey<NodeRecord> KEY_NODE_PRIMARY = createUniqueKey(Node.NODE, "KEY_node_PRIMARY", Node.NODE.ID);
        public static final UniqueKey<NodeRecord> KEY_NODE_NODE_UNIQUE = createUniqueKey(Node.NODE, "KEY_node_node_unique", Node.NODE.HOST, Node.NODE.PORT);
        public static final UniqueKey<SchemaVersionRecord> KEY_SCHEMA_VERSION_PRIMARY = createUniqueKey(SchemaVersion.SCHEMA_VERSION, "KEY_schema_version_PRIMARY", SchemaVersion.SCHEMA_VERSION.INSTALLED_RANK);
        public static final UniqueKey<SyncAccountRecord> KEY_SYNC_ACCOUNT_PRIMARY = createUniqueKey(SyncAccount.SYNC_ACCOUNT, "KEY_sync_account_PRIMARY", SyncAccount.SYNC_ACCOUNT.ID);
        public static final UniqueKey<SyncAccountRecord> KEY_SYNC_ACCOUNT_ADDRESS_UNIQUE = createUniqueKey(SyncAccount.SYNC_ACCOUNT, "KEY_sync_account_address_unique", SyncAccount.SYNC_ACCOUNT.ADDRESS, SyncAccount.SYNC_ACCOUNT.ORIGIN);
        public static final UniqueKey<SyncBlockRecord> KEY_SYNC_BLOCK_PRIMARY = createUniqueKey(SyncBlock.SYNC_BLOCK, "KEY_sync_block_PRIMARY", SyncBlock.SYNC_BLOCK.ID);
        public static final UniqueKey<SyncBlockRecord> KEY_SYNC_BLOCK_BLOCK_NUM_UNIQUE = createUniqueKey(SyncBlock.SYNC_BLOCK, "KEY_sync_block_block_num_UNIQUE", SyncBlock.SYNC_BLOCK.BLOCK_NUM);
        public static final UniqueKey<SyncNodeRecord> KEY_SYNC_NODE_PRIMARY = createUniqueKey(SyncNode.SYNC_NODE, "KEY_sync_node_PRIMARY", SyncNode.SYNC_NODE.ID);
        public static final UniqueKey<SyncNodeRecord> KEY_SYNC_NODE_NODE_ID_UNIQUE = createUniqueKey(SyncNode.SYNC_NODE, "KEY_sync_node_node_id_UNIQUE", SyncNode.SYNC_NODE.NODE_ID);
        public static final UniqueKey<TransactionRecord> KEY_TRANSACTION_PRIMARY = createUniqueKey(Transaction.TRANSACTION, "KEY_transaction_PRIMARY", Transaction.TRANSACTION.ID);
        public static final UniqueKey<TransactionRecord> KEY_TRANSACTION_HASH_UNIQUE = createUniqueKey(Transaction.TRANSACTION, "KEY_transaction_hash_UNIQUE", Transaction.TRANSACTION.HASH);
        public static final UniqueKey<TransactionResultRecord> KEY_TRANSACTION_RESULT_PRIMARY = createUniqueKey(TransactionResult.TRANSACTION_RESULT, "KEY_transaction_result_PRIMARY", TransactionResult.TRANSACTION_RESULT.ID);
        public static final UniqueKey<TransferRecord> KEY_TRANSFER_PRIMARY = createUniqueKey(Transfer.TRANSFER, "KEY_transfer_PRIMARY", Transfer.TRANSFER.ID);
        public static final UniqueKey<VotingRoundRecord> KEY_VOTING_ROUND_PRIMARY = createUniqueKey(VotingRound.VOTING_ROUND, "KEY_voting_round_PRIMARY", VotingRound.VOTING_ROUND.ID);
        public static final UniqueKey<VotingRoundStatsRecord> KEY_VOTING_ROUND_STATS_PRIMARY = createUniqueKey(VotingRoundStats.VOTING_ROUND_STATS, "KEY_voting_round_stats_PRIMARY", VotingRoundStats.VOTING_ROUND_STATS.ID);
        public static final UniqueKey<VotingRoundVoteRecord> KEY_VOTING_ROUND_VOTE_PRIMARY = createUniqueKey(VotingRoundVote.VOTING_ROUND_VOTE, "KEY_voting_round_vote_PRIMARY", VotingRoundVote.VOTING_ROUND_VOTE.ID);
        public static final UniqueKey<VotingRoundVoteLostRecord> KEY_VOTING_ROUND_VOTE_LOST_PRIMARY = createUniqueKey(VotingRoundVoteLost.VOTING_ROUND_VOTE_LOST, "KEY_voting_round_vote_lost_PRIMARY", VotingRoundVoteLost.VOTING_ROUND_VOTE_LOST.ID);
        public static final UniqueKey<WitnessRecord> KEY_WITNESS_PRIMARY = createUniqueKey(Witness.WITNESS, "KEY_witness_PRIMARY", Witness.WITNESS.ID);
    }

    private static class ForeignKeys0 extends AbstractKeys {
        public static final ForeignKey<AccountAssetRecord, AccountRecord> FK_ACCOUNT_ASSET_ACCOUNT_ID = createForeignKey(io.trxplorer.model.Keys.KEY_ACCOUNT_PRIMARY, AccountAsset.ACCOUNT_ASSET, "fk_account_asset_account_id", AccountAsset.ACCOUNT_ASSET.ACCOUNT_ID);
        public static final ForeignKey<AccountFrozenRecord, AccountRecord> FK_ACCOUNT_FROZEN_ACCOUNT_ID = createForeignKey(io.trxplorer.model.Keys.KEY_ACCOUNT_PRIMARY, AccountFrozen.ACCOUNT_FROZEN, "fk_account_frozen_account_id", AccountFrozen.ACCOUNT_FROZEN.ACCOUNT_ID);
        public static final ForeignKey<AccountVoteRecord, AccountRecord> FK_ACCOUNT_VOTE_VOTE_ACCOUNT_ID = createForeignKey(io.trxplorer.model.Keys.KEY_ACCOUNT_PRIMARY, AccountVote.ACCOUNT_VOTE, "fk_account_vote_vote_account_id", AccountVote.ACCOUNT_VOTE.VOTE_ACCOUNT_ID);
        public static final ForeignKey<AccountVoteRecord, AccountRecord> FK_ACCOUNT_VOTE_ACCOUNT_ID = createForeignKey(io.trxplorer.model.Keys.KEY_ACCOUNT_PRIMARY, AccountVote.ACCOUNT_VOTE, "fk_account_vote_account_id", AccountVote.ACCOUNT_VOTE.ACCOUNT_ID);
        public static final ForeignKey<BlockRecord, WitnessRecord> FK_BLOCK_WITNESS_ID = createForeignKey(io.trxplorer.model.Keys.KEY_WITNESS_PRIMARY, Block.BLOCK, "fk_block_witness_id", Block.BLOCK.WITNESS_ID);
        public static final ForeignKey<ContractAccountCreateRecord, AccountRecord> FK_CONTRACT_ACCOUNT_CREATE_OWNER_ID = createForeignKey(io.trxplorer.model.Keys.KEY_ACCOUNT_PRIMARY, ContractAccountCreate.CONTRACT_ACCOUNT_CREATE, "fk_contract_account_create_owner_id", ContractAccountCreate.CONTRACT_ACCOUNT_CREATE.OWNER_ID);
        public static final ForeignKey<ContractAccountCreateRecord, TransactionRecord> FK_CONTRACT_ACCOUNT_CREATE_TX_ID = createForeignKey(io.trxplorer.model.Keys.KEY_TRANSACTION_PRIMARY, ContractAccountCreate.CONTRACT_ACCOUNT_CREATE, "fk_contract_account_create_tx_id", ContractAccountCreate.CONTRACT_ACCOUNT_CREATE.TRANSACTION_ID);
        public static final ForeignKey<ContractAccountUpdateRecord, AccountRecord> FK_CONTRACT_ACCOUNT_UPDATE_OWNER_ID = createForeignKey(io.trxplorer.model.Keys.KEY_ACCOUNT_PRIMARY, ContractAccountUpdate.CONTRACT_ACCOUNT_UPDATE, "fk_contract_account_update_owner_id", ContractAccountUpdate.CONTRACT_ACCOUNT_UPDATE.OWNER_ID);
        public static final ForeignKey<ContractAccountUpdateRecord, TransactionRecord> FK_CONTRACT_ACCOUNT_UPDATE_TX_ID = createForeignKey(io.trxplorer.model.Keys.KEY_TRANSACTION_PRIMARY, ContractAccountUpdate.CONTRACT_ACCOUNT_UPDATE, "fk_contract_account_update_tx_id", ContractAccountUpdate.CONTRACT_ACCOUNT_UPDATE.TRANSACTION_ID);
        public static final ForeignKey<ContractAssetIssueRecord, AccountRecord> FK_CONTRACT_ASSET_ISSUE_OWNER_ID = createForeignKey(io.trxplorer.model.Keys.KEY_ACCOUNT_PRIMARY, ContractAssetIssue.CONTRACT_ASSET_ISSUE, "fk_contract_asset_issue_owner_id", ContractAssetIssue.CONTRACT_ASSET_ISSUE.OWNER_ID);
        public static final ForeignKey<ContractAssetIssueRecord, TransactionRecord> FK_CONTRACT_ASSET_ISSUE_TX_ID = createForeignKey(io.trxplorer.model.Keys.KEY_TRANSACTION_PRIMARY, ContractAssetIssue.CONTRACT_ASSET_ISSUE, "fk_contract_asset_issue_tx_id", ContractAssetIssue.CONTRACT_ASSET_ISSUE.TRANSACTION_ID);
        public static final ForeignKey<ContractBuyStorageRecord, TransactionRecord> FK_CONTRACT_BUY_STORAGE_TX_ID = createForeignKey(io.trxplorer.model.Keys.KEY_TRANSACTION_PRIMARY, ContractBuyStorage.CONTRACT_BUY_STORAGE, "fk_contract_buy_storage_tx_id", ContractBuyStorage.CONTRACT_BUY_STORAGE.TRANSACTION_ID);
        public static final ForeignKey<ContractBuyStorageBytesRecord, TransactionRecord> FK_CONTRACT_BUY_STORAGE_BYTES_TX_ID = createForeignKey(io.trxplorer.model.Keys.KEY_TRANSACTION_PRIMARY, ContractBuyStorageBytes.CONTRACT_BUY_STORAGE_BYTES, "fk_contract_buy_storage_bytes_tx_id", ContractBuyStorageBytes.CONTRACT_BUY_STORAGE_BYTES.TRANSACTION_ID);
        public static final ForeignKey<ContractCreateSmartcontractRecord, TransactionRecord> FK_CONTRACT_CREATE_SMARTCONTRACT_TX_ID = createForeignKey(io.trxplorer.model.Keys.KEY_TRANSACTION_PRIMARY, ContractCreateSmartcontract.CONTRACT_CREATE_SMARTCONTRACT, "fk_contract_create_smartcontract_tx_id", ContractCreateSmartcontract.CONTRACT_CREATE_SMARTCONTRACT.TRANSACTION_ID);
        public static final ForeignKey<ContractDeployRecord, AccountRecord> FK_CONTRACT_DEPLOY_OWNER_ID = createForeignKey(io.trxplorer.model.Keys.KEY_ACCOUNT_PRIMARY, ContractDeploy.CONTRACT_DEPLOY, "fk_contract_deploy_owner_id", ContractDeploy.CONTRACT_DEPLOY.OWNER_ID);
        public static final ForeignKey<ContractDeployRecord, TransactionRecord> FK_CONTRACT_DEPLOY_TX_ID = createForeignKey(io.trxplorer.model.Keys.KEY_TRANSACTION_PRIMARY, ContractDeploy.CONTRACT_DEPLOY, "fk_contract_deploy_tx_id", ContractDeploy.CONTRACT_DEPLOY.TRANSACTION_ID);
        public static final ForeignKey<ContractExchangeCreateRecord, TransactionRecord> FK_CONTRACT_EXCHANGE_CREATE_TX_ID = createForeignKey(io.trxplorer.model.Keys.KEY_TRANSACTION_PRIMARY, ContractExchangeCreate.CONTRACT_EXCHANGE_CREATE, "fk_contract_exchange_create_tx_id", ContractExchangeCreate.CONTRACT_EXCHANGE_CREATE.TRANSACTION_ID);
        public static final ForeignKey<ContractExchangeInjectRecord, TransactionRecord> FK_CONTRACT_EXCHANGE_INJECT_TX_ID = createForeignKey(io.trxplorer.model.Keys.KEY_TRANSACTION_PRIMARY, ContractExchangeInject.CONTRACT_EXCHANGE_INJECT, "fk_contract_exchange_inject_tx_id", ContractExchangeInject.CONTRACT_EXCHANGE_INJECT.TRANSACTION_ID);
        public static final ForeignKey<ContractExchangeTransactionContractRecord, TransactionRecord> FK_CONTRACT_EXCHANGE_TRANSACTION_CONTRACT_TX_ID = createForeignKey(io.trxplorer.model.Keys.KEY_TRANSACTION_PRIMARY, ContractExchangeTransactionContract.CONTRACT_EXCHANGE_TRANSACTION_CONTRACT, "fk_contract_exchange_transaction_contract_tx_id", ContractExchangeTransactionContract.CONTRACT_EXCHANGE_TRANSACTION_CONTRACT.TRANSACTION_ID);
        public static final ForeignKey<ContractExchangeWithdrawContractRecord, TransactionRecord> FK_CONTRACT_EXCHANGE_WITHDRAW_CONTRACT_TX_ID = createForeignKey(io.trxplorer.model.Keys.KEY_TRANSACTION_PRIMARY, ContractExchangeWithdrawContract.CONTRACT_EXCHANGE_WITHDRAW_CONTRACT, "fk_contract_exchange_withdraw_contract_tx_id", ContractExchangeWithdrawContract.CONTRACT_EXCHANGE_WITHDRAW_CONTRACT.TRANSACTION_ID);
        public static final ForeignKey<ContractFreezeBalanceRecord, TransactionRecord> FK_CONTRACT_FREEZE_BALANCE_TX_ID = createForeignKey(io.trxplorer.model.Keys.KEY_TRANSACTION_PRIMARY, ContractFreezeBalance.CONTRACT_FREEZE_BALANCE, "fk_contract_freeze_balance_tx_id", ContractFreezeBalance.CONTRACT_FREEZE_BALANCE.TRANSACTION_ID);
        public static final ForeignKey<ContractFreezeBalanceRecord, AccountRecord> FK_CONTRACT_FREEZE_BALANCE_OWNER_ID = createForeignKey(io.trxplorer.model.Keys.KEY_ACCOUNT_PRIMARY, ContractFreezeBalance.CONTRACT_FREEZE_BALANCE, "fk_contract_freeze_balance_owner_id", ContractFreezeBalance.CONTRACT_FREEZE_BALANCE.OWNER_ID);
        public static final ForeignKey<ContractParticipateAssetIssueRecord, AccountRecord> FK_CONTRACT_PARTICIPATE_ASSET_ISSUE_OWNER_ID = createForeignKey(io.trxplorer.model.Keys.KEY_ACCOUNT_PRIMARY, ContractParticipateAssetIssue.CONTRACT_PARTICIPATE_ASSET_ISSUE, "fk_contract_participate_asset_issue_owner_id", ContractParticipateAssetIssue.CONTRACT_PARTICIPATE_ASSET_ISSUE.OWNER_ID);
        public static final ForeignKey<ContractParticipateAssetIssueRecord, AccountRecord> FK_CONTRACT_PARTICIPATE_ASSET_ISSUE_TO_ID = createForeignKey(io.trxplorer.model.Keys.KEY_ACCOUNT_PRIMARY, ContractParticipateAssetIssue.CONTRACT_PARTICIPATE_ASSET_ISSUE, "fk_contract_participate_asset_issue_to_id", ContractParticipateAssetIssue.CONTRACT_PARTICIPATE_ASSET_ISSUE.TO_ID);
        public static final ForeignKey<ContractParticipateAssetIssueRecord, TransactionRecord> FK_CONTRACT_PARTICIPATE_ASSET_ISSUE_TX_ID = createForeignKey(io.trxplorer.model.Keys.KEY_TRANSACTION_PRIMARY, ContractParticipateAssetIssue.CONTRACT_PARTICIPATE_ASSET_ISSUE, "fk_contract_participate_asset_issue_tx_id", ContractParticipateAssetIssue.CONTRACT_PARTICIPATE_ASSET_ISSUE.TRANSACTION_ID);
        public static final ForeignKey<ContractProposalApproveRecord, TransactionRecord> FK_CONTRACT_PROPOSAL_APPROVE_TX_ID = createForeignKey(io.trxplorer.model.Keys.KEY_TRANSACTION_PRIMARY, ContractProposalApprove.CONTRACT_PROPOSAL_APPROVE, "fk_contract_proposal_approve_tx_id", ContractProposalApprove.CONTRACT_PROPOSAL_APPROVE.TRANSACTION_ID);
        public static final ForeignKey<ContractProposalCreateRecord, TransactionRecord> FK_CONTRACT_PROPOSAL_CREATE_TX_ID = createForeignKey(io.trxplorer.model.Keys.KEY_TRANSACTION_PRIMARY, ContractProposalCreate.CONTRACT_PROPOSAL_CREATE, "fk_contract_proposal_create_tx_id", ContractProposalCreate.CONTRACT_PROPOSAL_CREATE.TRANSACTION_ID);
        public static final ForeignKey<ContractProposalDeleteRecord, TransactionRecord> FK_CONTRACT_PROPOSAL_DELETE_TX_ID = createForeignKey(io.trxplorer.model.Keys.KEY_TRANSACTION_PRIMARY, ContractProposalDelete.CONTRACT_PROPOSAL_DELETE, "fk_contract_proposal_delete_tx_id", ContractProposalDelete.CONTRACT_PROPOSAL_DELETE.TRANSACTION_ID);
        public static final ForeignKey<ContractSellStorageRecord, TransactionRecord> FK_CONTRACT_SELL_STORAGE_TX_ID = createForeignKey(io.trxplorer.model.Keys.KEY_TRANSACTION_PRIMARY, ContractSellStorage.CONTRACT_SELL_STORAGE, "fk_contract_sell_storage_tx_id", ContractSellStorage.CONTRACT_SELL_STORAGE.TRANSACTION_ID);
        public static final ForeignKey<ContractSetAccountIdRecord, TransactionRecord> FK_CONTRACT_SET_ACCOUNT_ID_TX_ID = createForeignKey(io.trxplorer.model.Keys.KEY_TRANSACTION_PRIMARY, ContractSetAccountId.CONTRACT_SET_ACCOUNT_ID, "fk_contract_set_account_id_tx_id", ContractSetAccountId.CONTRACT_SET_ACCOUNT_ID.TRANSACTION_ID);
        public static final ForeignKey<ContractTransferRecord, AccountRecord> FK_CONTRACT_TRANSFER_OWNER_ID = createForeignKey(io.trxplorer.model.Keys.KEY_ACCOUNT_PRIMARY, ContractTransfer.CONTRACT_TRANSFER, "fk_contract_transfer_owner_id", ContractTransfer.CONTRACT_TRANSFER.OWNER_ID);
        public static final ForeignKey<ContractTransferRecord, AccountRecord> FK_CONTRACT_TRANSFER_TO_ID = createForeignKey(io.trxplorer.model.Keys.KEY_ACCOUNT_PRIMARY, ContractTransfer.CONTRACT_TRANSFER, "fk_contract_transfer_to_id", ContractTransfer.CONTRACT_TRANSFER.TO_ID);
        public static final ForeignKey<ContractTransferRecord, TransactionRecord> FK_CONTRACT_TRANSFER_TX_ID = createForeignKey(io.trxplorer.model.Keys.KEY_TRANSACTION_PRIMARY, ContractTransfer.CONTRACT_TRANSFER, "fk_contract_transfer_tx_id", ContractTransfer.CONTRACT_TRANSFER.TRANSACTION_ID);
        public static final ForeignKey<ContractTransferAssetRecord, AccountRecord> FK_CONTRACT_TRANSFER_ASSET_OWNER_ID = createForeignKey(io.trxplorer.model.Keys.KEY_ACCOUNT_PRIMARY, ContractTransferAsset.CONTRACT_TRANSFER_ASSET, "fk_contract_transfer_asset_owner_id", ContractTransferAsset.CONTRACT_TRANSFER_ASSET.OWNER_ID);
        public static final ForeignKey<ContractTransferAssetRecord, AccountRecord> FK_CONTRACT_TRANSFER_ASSET_TO_ID = createForeignKey(io.trxplorer.model.Keys.KEY_ACCOUNT_PRIMARY, ContractTransferAsset.CONTRACT_TRANSFER_ASSET, "fk_contract_transfer_asset_to_id", ContractTransferAsset.CONTRACT_TRANSFER_ASSET.TO_ID);
        public static final ForeignKey<ContractTransferAssetRecord, TransactionRecord> FK_CONTRACT_TRANSFER_ASSET_TX_ID = createForeignKey(io.trxplorer.model.Keys.KEY_TRANSACTION_PRIMARY, ContractTransferAsset.CONTRACT_TRANSFER_ASSET, "fk_contract_transfer_asset_tx_id", ContractTransferAsset.CONTRACT_TRANSFER_ASSET.TRANSACTION_ID);
        public static final ForeignKey<ContractTriggerSmartcontractRecord, TransactionRecord> FK_CONTRACT_TRIGGER_SMARTCONTRACT_TX_ID = createForeignKey(io.trxplorer.model.Keys.KEY_TRANSACTION_PRIMARY, ContractTriggerSmartcontract.CONTRACT_TRIGGER_SMARTCONTRACT, "fk_contract_trigger_smartcontract_tx_id", ContractTriggerSmartcontract.CONTRACT_TRIGGER_SMARTCONTRACT.TRANSACTION_ID);
        public static final ForeignKey<ContractUnfreezeAssetRecord, TransactionRecord> FK_CONTRACT_UNFREEZE_ASSET_TX_ID = createForeignKey(io.trxplorer.model.Keys.KEY_TRANSACTION_PRIMARY, ContractUnfreezeAsset.CONTRACT_UNFREEZE_ASSET, "fk_contract_unfreeze_asset_tx_id", ContractUnfreezeAsset.CONTRACT_UNFREEZE_ASSET.TRANSACTION_ID);
        public static final ForeignKey<ContractUnfreezeBalanceRecord, TransactionRecord> FK_CONTRACT_UNFREEZE_BALANCE_TX_ID = createForeignKey(io.trxplorer.model.Keys.KEY_TRANSACTION_PRIMARY, ContractUnfreezeBalance.CONTRACT_UNFREEZE_BALANCE, "fk_contract_unfreeze_balance_tx_id", ContractUnfreezeBalance.CONTRACT_UNFREEZE_BALANCE.TRANSACTION_ID);
        public static final ForeignKey<ContractUnfreezeBalanceRecord, AccountRecord> FK_CONTRACT_UNFREEZE_BALANCE_OWNER_ID = createForeignKey(io.trxplorer.model.Keys.KEY_ACCOUNT_PRIMARY, ContractUnfreezeBalance.CONTRACT_UNFREEZE_BALANCE, "fk_contract_unfreeze_balance_owner_id", ContractUnfreezeBalance.CONTRACT_UNFREEZE_BALANCE.OWNER_ID);
        public static final ForeignKey<ContractUpdateAssetRecord, TransactionRecord> FK_CONTRACT_UPDATE_ASSET_TX_ID = createForeignKey(io.trxplorer.model.Keys.KEY_TRANSACTION_PRIMARY, ContractUpdateAsset.CONTRACT_UPDATE_ASSET, "fk_contract_update_asset_tx_id", ContractUpdateAsset.CONTRACT_UPDATE_ASSET.TRANSACTION_ID);
        public static final ForeignKey<ContractUpdateSettingRecord, TransactionRecord> FK_CONTRACT_UPDATE_SETTING_TX_ID = createForeignKey(io.trxplorer.model.Keys.KEY_TRANSACTION_PRIMARY, ContractUpdateSetting.CONTRACT_UPDATE_SETTING, "fk_contract_update_setting_tx_id", ContractUpdateSetting.CONTRACT_UPDATE_SETTING.TRANSACTION_ID);
        public static final ForeignKey<ContractVoteAssetRecord, AccountRecord> FK_CONTRACT_VOTE_ASSET_OWNER_ID = createForeignKey(io.trxplorer.model.Keys.KEY_ACCOUNT_PRIMARY, ContractVoteAsset.CONTRACT_VOTE_ASSET, "fk_contract_vote_asset_owner_id", ContractVoteAsset.CONTRACT_VOTE_ASSET.OWNER_ID);
        public static final ForeignKey<ContractVoteAssetRecord, TransactionRecord> FK_CONTRACT_VOTE_ASSET_TX_ID = createForeignKey(io.trxplorer.model.Keys.KEY_TRANSACTION_PRIMARY, ContractVoteAsset.CONTRACT_VOTE_ASSET, "fk_contract_vote_asset_tx_id", ContractVoteAsset.CONTRACT_VOTE_ASSET.TRANSACTION_ID);
        public static final ForeignKey<ContractVoteAssetVoteRecord, AccountRecord> FK_CONTRACT_VOTE_ASSET_VOTE_OWNER_ID = createForeignKey(io.trxplorer.model.Keys.KEY_ACCOUNT_PRIMARY, ContractVoteAssetVote.CONTRACT_VOTE_ASSET_VOTE, "fk_contract_vote_asset_vote_owner_id", ContractVoteAssetVote.CONTRACT_VOTE_ASSET_VOTE.OWNER_ID);
        public static final ForeignKey<ContractVoteAssetVoteRecord, ContractVoteAssetRecord> FK_CONTRACT_VOTE_ASSET_VOTE_VA_ID = createForeignKey(io.trxplorer.model.Keys.KEY_CONTRACT_VOTE_ASSET_PRIMARY, ContractVoteAssetVote.CONTRACT_VOTE_ASSET_VOTE, "fk_contract_vote_asset_vote_va_id", ContractVoteAssetVote.CONTRACT_VOTE_ASSET_VOTE.VOTE_ASSET_ID);
        public static final ForeignKey<ContractVoteWitnessRecord, AccountRecord> FK_CONTRACT_VOTE_WITNESS_OWNER_ID = createForeignKey(io.trxplorer.model.Keys.KEY_ACCOUNT_PRIMARY, ContractVoteWitness.CONTRACT_VOTE_WITNESS, "fk_contract_vote_witness_owner_id", ContractVoteWitness.CONTRACT_VOTE_WITNESS.OWNER_ID);
        public static final ForeignKey<ContractVoteWitnessRecord, TransactionRecord> FK_CONTRACT_VOTE_WITNESS_TX_ID = createForeignKey(io.trxplorer.model.Keys.KEY_TRANSACTION_PRIMARY, ContractVoteWitness.CONTRACT_VOTE_WITNESS, "fk_contract_vote_witness_tx_id", ContractVoteWitness.CONTRACT_VOTE_WITNESS.TRANSACTION_ID);
        public static final ForeignKey<ContractVoteWitnessVoteRecord, AccountRecord> FK_CONTRACT_VOTE_WITNESS_VOTE_OWNER_ID = createForeignKey(io.trxplorer.model.Keys.KEY_ACCOUNT_PRIMARY, ContractVoteWitnessVote.CONTRACT_VOTE_WITNESS_VOTE, "fk_contract_vote_witness_vote_owner_id", ContractVoteWitnessVote.CONTRACT_VOTE_WITNESS_VOTE.OWNER_ID);
        public static final ForeignKey<ContractVoteWitnessVoteRecord, ContractVoteWitnessRecord> FK_CONTRACT_VOTE_WITNESS_VOTE_VW_ID = createForeignKey(io.trxplorer.model.Keys.KEY_CONTRACT_VOTE_WITNESS_PRIMARY, ContractVoteWitnessVote.CONTRACT_VOTE_WITNESS_VOTE, "fk_contract_vote_witness_vote_vw_id", ContractVoteWitnessVote.CONTRACT_VOTE_WITNESS_VOTE.VOTE_WITNESS_ID);
        public static final ForeignKey<ContractWithdrawBalanceRecord, TransactionRecord> FK_CONTRACT_WITHDRAW_BALANCE_TX_ID = createForeignKey(io.trxplorer.model.Keys.KEY_TRANSACTION_PRIMARY, ContractWithdrawBalance.CONTRACT_WITHDRAW_BALANCE, "fk_contract_withdraw_balance_tx_id", ContractWithdrawBalance.CONTRACT_WITHDRAW_BALANCE.TRANSACTION_ID);
        public static final ForeignKey<ContractWithdrawBalanceRecord, AccountRecord> FK_CONTRACT_WITHDRAW_BALANCE_OWNER_ID = createForeignKey(io.trxplorer.model.Keys.KEY_ACCOUNT_PRIMARY, ContractWithdrawBalance.CONTRACT_WITHDRAW_BALANCE, "fk_contract_withdraw_balance_owner_id", ContractWithdrawBalance.CONTRACT_WITHDRAW_BALANCE.OWNER_ID);
        public static final ForeignKey<ContractWitnessCreateRecord, AccountRecord> FK_CONTRACT_WITNESS_CREATE_OWNER_ID = createForeignKey(io.trxplorer.model.Keys.KEY_ACCOUNT_PRIMARY, ContractWitnessCreate.CONTRACT_WITNESS_CREATE, "fk_contract_witness_create_owner_id", ContractWitnessCreate.CONTRACT_WITNESS_CREATE.OWNER_ID);
        public static final ForeignKey<ContractWitnessCreateRecord, TransactionRecord> FK_CONTRACT_WITNESS_CREATE_TX_ID = createForeignKey(io.trxplorer.model.Keys.KEY_TRANSACTION_PRIMARY, ContractWitnessCreate.CONTRACT_WITNESS_CREATE, "fk_contract_witness_create_tx_id", ContractWitnessCreate.CONTRACT_WITNESS_CREATE.TRANSACTION_ID);
        public static final ForeignKey<ContractWitnessUpdateRecord, AccountRecord> FK_CONTRACT_WITNESS_UPDATE_OWNER_ID = createForeignKey(io.trxplorer.model.Keys.KEY_ACCOUNT_PRIMARY, ContractWitnessUpdate.CONTRACT_WITNESS_UPDATE, "fk_contract_witness_update_owner_id", ContractWitnessUpdate.CONTRACT_WITNESS_UPDATE.OWNER_ID);
        public static final ForeignKey<ContractWitnessUpdateRecord, TransactionRecord> FK_CONTRACT_WITNESS_UPDATE_TX_ID = createForeignKey(io.trxplorer.model.Keys.KEY_TRANSACTION_PRIMARY, ContractWitnessUpdate.CONTRACT_WITNESS_UPDATE, "fk_contract_witness_update_tx_id", ContractWitnessUpdate.CONTRACT_WITNESS_UPDATE.TRANSACTION_ID);
        public static final ForeignKey<TransactionRecord, BlockRecord> FK_TRANSACTION_BLOCK = createForeignKey(io.trxplorer.model.Keys.KEY_BLOCK_PRIMARY, Transaction.TRANSACTION, "fk_transaction_block", Transaction.TRANSACTION.BLOCK_ID);
        public static final ForeignKey<TransactionResultRecord, TransactionRecord> FK_TRANSACTION_RESULT_TX_ID = createForeignKey(io.trxplorer.model.Keys.KEY_TRANSACTION_PRIMARY, TransactionResult.TRANSACTION_RESULT, "fk_transaction_result_tx_id", TransactionResult.TRANSACTION_RESULT.TRANSACTION_ID);
        public static final ForeignKey<TransferRecord, TransactionRecord> FK_TRANSFER_TX_ID = createForeignKey(io.trxplorer.model.Keys.KEY_TRANSACTION_PRIMARY, Transfer.TRANSFER, "fk_transfer_tx_id", Transfer.TRANSFER.TRANSACTION_ID);
        public static final ForeignKey<VotingRoundStatsRecord, VotingRoundRecord> FK_VOTING_ROUND_STATS_VOTIN_ROUND_ID = createForeignKey(io.trxplorer.model.Keys.KEY_VOTING_ROUND_PRIMARY, VotingRoundStats.VOTING_ROUND_STATS, "fk_voting_round_stats_votin_round_id", VotingRoundStats.VOTING_ROUND_STATS.VOTING_ROUND_ID);
        public static final ForeignKey<VotingRoundVoteRecord, VotingRoundRecord> FK_VOTING_ROUND_VOTE_ID = createForeignKey(io.trxplorer.model.Keys.KEY_VOTING_ROUND_PRIMARY, VotingRoundVote.VOTING_ROUND_VOTE, "fk_voting_round_vote_id", VotingRoundVote.VOTING_ROUND_VOTE.VOTING_ROUND_ID);
        public static final ForeignKey<VotingRoundVoteLostRecord, VotingRoundRecord> FK_VOTING_ROUND_VOTE_LOST_VOTING_ROUND_ID = createForeignKey(io.trxplorer.model.Keys.KEY_VOTING_ROUND_PRIMARY, VotingRoundVoteLost.VOTING_ROUND_VOTE_LOST, "fk_voting_round_vote_lost_voting_round_id", VotingRoundVoteLost.VOTING_ROUND_VOTE_LOST.VOTING_ROUND_ID);
        public static final ForeignKey<WitnessRecord, AccountRecord> FK_WITNESS_ACCOUNT_ID = createForeignKey(io.trxplorer.model.Keys.KEY_ACCOUNT_PRIMARY, Witness.WITNESS, "fk_witness_account_id", Witness.WITNESS.ACCOUNT_ID);
    }
}
